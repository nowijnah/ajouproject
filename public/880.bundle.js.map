{"version":3,"file":"880.bundle.js","mappings":"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","sources":["webpack://muibasic_starterkit/./src/components/posts/upload/MarkdownEditor.js","webpack://muibasic_starterkit/./src/components/posts/upload/FileUploader.js","webpack://muibasic_starterkit/./src/pages/admin/AdminNotices.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\n\nimport ReactMarkdown from 'react-markdown';\n\n/**\n * 마크다운 에디터 컴포넌트 - 에디터와 미리보기 기능 제공\n */\nconst MarkdownEditor = ({ \n  value, \n  onChange, \n  placeholder = \"마크다운으로 내용을 작성해주세요. 이미지나 PDF 파일을 드래그하여 추가할 수 있습니다.\",\n  required = true,\n  onDrop\n}) => {\n  const textAreaRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // 드래그 & 드롭 핸들러\n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  };\n  \n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  \n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    if (onDrop) onDrop(e, textAreaRef);\n  };\n\n  // 마크다운 구문 삽입\n  const insertMarkdownSyntax = (syntax) => {\n    const textArea = textAreaRef.current;\n    if (!textArea) return;\n  \n    const start = textArea.selectionStart;\n    const end = textArea.selectionEnd;\n    const selectedText = value.substring(start, end);\n    let insertText = '';\n  \n    switch(syntax) {\n      case 'bold':\n        insertText = `**${selectedText || '굵은 텍스트'}**`;\n        break;\n      case 'italic':\n        insertText = `*${selectedText || '기울임 텍스트'}*`;\n        break;\n      case 'strikethrough':\n        insertText = `~~${selectedText || '취소선 텍스트'}~~`;\n        break;\n      case 'code':\n        insertText = selectedText.includes('\\n') \n          ? `\\`\\`\\`\\n${selectedText || '코드 블록'}\\n\\`\\`\\``\n          : `\\`${selectedText || '인라인 코드'}\\``;\n        break;\n      case 'link':\n        insertText = `[${selectedText || '링크 텍스트'}](url)`;\n        break;\n      case 'image':\n        insertText = `![${selectedText || '이미지 설명'}](이미지 URL)`;\n        break;\n      case 'heading':\n        insertText = `# ${selectedText || '제목'}`;\n        break;\n      case 'quote':\n        insertText = `> ${selectedText || '인용문'}`;\n        break;\n      case 'bullet':\n        insertText = selectedText\n          ? selectedText.split('\\n').map(line => `- ${line}`).join('\\n')\n          : '- 목록 항목';\n        break;\n      case 'number':\n        insertText = selectedText\n          ? selectedText.split('\\n').map((line, i) => `${i + 1}. ${line}`).join('\\n')\n          : '1. 목록 항목';\n        break;\n      default:\n        insertText = selectedText;\n    }\n  \n    const newContent = \n      value.substring(0, start) +\n      insertText +\n      value.substring(end);\n  \n    // 변경 내용 부모 컴포넌트에 전달\n    onChange(newContent);\n  \n    // 커서 위치 조정\n    setTimeout(() => {\n      textArea.focus();\n      const newCursorPos = start + insertText.length;\n      textArea.setSelectionRange(newCursorPos, newCursorPos);\n    }, 0);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n          내용 작성\n        </Typography>\n        <Box\n          sx={{\n            position: 'relative',\n            '& .MuiTextField-root': {\n              backgroundColor: isDragging ? 'rgba(0, 102, 204, 0.05)' : 'transparent',\n            },\n          }}\n          onDragEnter={handleDragEnter}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <Box sx={{ \n            mb: 2,\n            p: 1,\n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: 1,\n            bgcolor: 'background.paper',\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap'\n          }}>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('bold')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              <strong>B</strong>\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('italic')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              <em>I</em>\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('strikethrough')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              <span style={{ textDecoration: 'line-through' }}>S</span>\n            </Button>\n            <Divider orientation=\"vertical\" flexItem />\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('heading')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              H\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('quote')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              \"\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('code')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              {'</>'}\n            </Button>\n            <Divider orientation=\"vertical\" flexItem />\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('bullet')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              •\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('number')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              1.\n            </Button>\n            <Divider orientation=\"vertical\" flexItem />\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('link')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              🔗\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => insertMarkdownSyntax('image')}\n              sx={{ minWidth: 'auto', px: 1 }}\n            >\n              🖼\n            </Button>\n          </Box>\n          {isDragging && (\n            <Box\n              sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'rgba(0, 102, 204, 0.1)',\n                border: '2px dashed #0066CC',\n                borderRadius: 1,\n                zIndex: 1,\n              }}\n            >\n              <Typography variant=\"body1\" color=\"primary\">\n                파일을 여기에 놓아주세요\n              </Typography>\n            </Box>\n          )}\n          <TextField\n            inputRef={textAreaRef}\n            fullWidth\n            multiline\n            rows={15}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            placeholder={placeholder}\n            variant=\"outlined\"\n            required={required}\n          />\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n          미리보기\n        </Typography>\n        <Box sx={{\n          height: '400px',\n          overflow: 'auto',\n          p: 2,\n          border: '1px solid',\n          borderColor: 'divider',\n          borderRadius: 1,\n          bgcolor: 'grey.50'\n        }}>\n          <ReactMarkdown>{value}</ReactMarkdown>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MarkdownEditor;","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\n\nimport UploadIcon from '@mui/icons-material/CloudUpload';\nimport CloseIcon from '@mui/icons-material/Close';\n\n/**\n * 파일 업로더 컴포넌트\n */\nconst FileUploader = ({ files, onAddFiles, onUpdateDescription, onRemoveFile }) => {\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    \n    selectedFiles.forEach(file => {\n      const fileType = file.type.startsWith('image/') ? 'IMAGE' \n                      : file.type === 'application/pdf' ? 'PDF' \n                      : 'DOC';\n      \n      onAddFiles({\n        fileId: `file-${Date.now()}-${Math.random()}`,\n        file: file,\n        type: fileType,\n        description: ''\n      });\n    });\n  };\n\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        파일 첨부\n      </Typography>\n      <Button\n        component=\"label\"\n        variant=\"outlined\"\n        startIcon={<UploadIcon />}\n        sx={{ mb: 2 }}\n      >\n        파일 선택\n        <input\n          type=\"file\"\n          hidden\n          multiple\n          onChange={handleFileChange}\n        />\n      </Button>\n\n      {files.length > 0 && (\n        <List>\n          {files.map((file) => (\n            <ListItem \n              key={file.fileId}\n              sx={{ \n                bgcolor: 'grey.50',\n                borderRadius: 1,\n                mb: 1,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch'\n              }}\n            >\n              <Box sx={{ \n                display: 'flex', \n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%'\n              }}>\n                <Typography>\n                  {file.filename || file.file.name}\n                </Typography>\n                <IconButton \n                  onClick={() => onRemoveFile(file.fileId)}\n                  sx={{ color: 'error.main' }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Box>\n              <TextField\n                fullWidth\n                size=\"small\"\n                placeholder=\"파일 설명 입력\"\n                value={file.description || ''}\n                onChange={(e) => onUpdateDescription(file.fileId, e.target.value)}\n                sx={{ mt: 1 }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Box>\n  );\n};\n\nexport default FileUploader;","// src/pages/admin/AdminNotices.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport IconButton from '@mui/material/IconButton';\n\n// 재사용 가능한 기존 컴포넌트 import\nimport MarkdownEditor from '../../components/posts/upload/MarkdownEditor';\nimport FileUploader from '../../components/posts/upload/FileUploader';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\n\n// 아이콘\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport EyeIcon from '@mui/icons-material/Visibility';\n\n// Firebase\nimport { useAuth } from '../../components/auth/AuthContext';\nimport { \n  collection, \n  query, \n  getDocs, \n  doc, \n  getDoc, \n  setDoc, \n  deleteDoc, \n  updateDoc,\n  serverTimestamp,\n  orderBy\n} from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { db, storage } from '../../firebase';\nimport ReactMarkdown from 'react-markdown';\n\nconst AdminNotices = () => {\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const [notices, setNotices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [editingNotice, setEditingNotice] = useState(null);\n  const [noticeTitle, setNoticeTitle] = useState('');\n  const [noticeContent, setNoticeContent] = useState('');\n  const [isMainPageNotice, setIsMainPageNotice] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [noticeToDelete, setNoticeToDelete] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [files, setFiles] = useState([]);\n  const textAreaRef = useRef(null);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  // 관리자 권한 확인\n  useEffect(() => {\n    if (currentUser && currentUser.role !== 'ADMIN') {\n      alert('관리자 권한이 필요합니다.');\n      navigate('/');\n    }\n  }, [currentUser, navigate]);\n\n  // 공지사항 목록 불러오기\n  useEffect(() => {\n    const fetchNotices = async () => {\n      if (!currentUser) return;\n      \n      try {\n        setLoading(true);\n        const noticesRef = collection(db, 'notices');\n        const q = query(noticesRef, orderBy('createdAt', 'desc'));\n        const querySnapshot = await getDocs(q);\n        \n        const noticesList = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data(),\n          createdAt: doc.data().createdAt?.toDate?.() || new Date()\n        }));\n        \n        setNotices(noticesList);\n      } catch (error) {\n        console.error('공지사항 로드 중 오류:', error);\n        alert('공지사항을 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchNotices();\n  }, [currentUser]);\n\n  // 공지사항 추가/수정 다이얼로그 열기\n  const handleOpenDialog = (notice = null) => {\n    if (notice) {\n      setEditingNotice(notice);\n      setNoticeTitle(notice.title);\n      setNoticeContent(notice.content);\n      setIsMainPageNotice(notice.isMainPageNotice || false);\n      // 기존 파일 정보 설정\n      setFiles(notice.files || []);\n    } else {\n      setEditingNotice(null);\n      setNoticeTitle('');\n      setNoticeContent('');\n      setIsMainPageNotice(false);\n      setFiles([]);\n    }\n    setDialogOpen(true);\n    setPreviewMode(false);\n  };\n\n  // 공지사항 삭제 다이얼로그 열기\n  const handleOpenDeleteDialog = (notice) => {\n    setNoticeToDelete(notice);\n    setDeleteDialogOpen(true);\n  };\n\n  // 드래그 앤 드롭으로 받은 파일 처리 (MarkdownEditor에서 호출)\n  const handleDrop = (e, textAreaRef) => {\n    const files = Array.from(e.dataTransfer.files);\n    const validFiles = files.filter(file => \n      file.type.startsWith('image/') || \n      file.type === 'application/pdf' ||\n      file.type.includes('document')\n    );\n\n    if (validFiles.length > 0 && textAreaRef.current) {\n      const cursorPosition = textAreaRef.current.selectionStart;\n      \n      for (const file of validFiles) {\n        let markdown = '';\n        let fileType = '';\n        \n        if (file.type.startsWith('image/')) {\n          const tempUrl = URL.createObjectURL(file);\n          markdown = `![${file.name}](${tempUrl})\\n`;\n          fileType = 'IMAGE';\n        } else {\n          const tempUrl = URL.createObjectURL(file);\n          markdown = `[${file.type === 'application/pdf' ? 'PDF: ' : '문서: '}${file.name}](${tempUrl})\\n`;\n          fileType = file.type === 'application/pdf' ? 'PDF' : 'DOC';\n        }\n        \n        const newContent = noticeContent.slice(0, cursorPosition) + \n                    markdown + \n                    noticeContent.slice(cursorPosition);\n        \n        setNoticeContent(newContent);\n        \n        // 파일 목록에 추가\n        handleAddFile({\n          fileId: `file-${Date.now()}-${Math.random()}`,\n          file: file,\n          type: fileType,\n          description: file.name,\n          tempUrl\n        });\n      }\n    }\n  };\n\n  // 파일 추가 (FileUploader에서 호출)\n  const handleAddFile = (fileData) => {\n    setFiles(prev => [...prev, fileData]);\n  };\n\n  // 파일 설명 업데이트 (FileUploader에서 호출)\n  const handleUpdateFileDescription = (fileId, description) => {\n    setFiles(prev => prev.map(file => \n      file.fileId === fileId ? { ...file, description } : file\n    ));\n  };\n\n  // 파일 삭제 (FileUploader에서 호출)\n  const handleRemoveFile = (fileId) => {\n    // 파일 목록에서 삭제할 파일 정보 찾기\n    const fileToRemove = files.find(file => file.fileId === fileId);\n    \n    if (fileToRemove) {\n      // 해당 파일의 마크다운 패턴을 찾아 삭제\n      let updatedContent = noticeContent;\n      \n      if (fileToRemove.type === 'IMAGE') {\n        // 이미지 마크다운 패턴: ![파일이름](URL)\n        const imgPattern = new RegExp(`!\\\\[.*?\\\\]\\\\(${fileToRemove.tempUrl || fileToRemove.url}\\\\)`, 'g');\n        updatedContent = updatedContent.replace(imgPattern, '');\n      } else {\n        // 파일 링크 마크다운 패턴: [파일이름](URL)\n        const linkPattern = new RegExp(`\\\\[.*?\\\\]\\\\(${fileToRemove.tempUrl || fileToRemove.url}\\\\)`, 'g');\n        updatedContent = updatedContent.replace(linkPattern, '');\n      }\n      \n      setNoticeContent(updatedContent);\n      setFiles(prev => prev.filter(file => file.fileId !== fileId));\n    }\n  };\n\n  // 공지사항 저장\n  const handleSaveNotice = async () => {\n    if (!noticeTitle.trim() || !noticeContent.trim()) {\n      alert('제목과 내용을 모두 입력해주세요.');\n      return;\n    }\n    \n    try {\n      setSaving(true);\n      \n      // 1. 파일 업로드\n      const uploadedFiles = await Promise.all(\n        files.map(async (fileItem) => {\n          // 이미 업로드된 파일은 그대로 사용\n          if (fileItem.url && !fileItem.file) {\n            return fileItem;\n          }\n          \n          // 새로운 파일 업로드\n          const fileRef = ref(storage, `notices/${currentUser.uid}/${Date.now()}-${fileItem.file.name}`);\n          const fileSnapshot = await uploadBytes(fileRef, fileItem.file);\n          const url = await getDownloadURL(fileSnapshot.ref);\n          \n          return {\n            fileId: fileItem.fileId,\n            url: url,\n            filename: fileItem.file.name,\n            type: fileItem.type,\n            description: fileItem.description\n          };\n        })\n      );\n      \n      // 2. 임시 URL을 실제 URL로 변경\n      let updatedContent = noticeContent;\n      \n      files.forEach((fileItem) => {\n        if (fileItem.tempUrl) {\n          const uploadedFile = uploadedFiles.find(f => f.fileId === fileItem.fileId);\n          \n          if (uploadedFile) {\n            // 임시 URL을 실제 업로드된 URL로 교체\n            if (fileItem.type === 'IMAGE') {\n              // 이미지 마크다운 패턴: ![파일이름](tempUrl)\n              const imgPattern = new RegExp(`!\\\\[.*?\\\\]\\\\(${fileItem.tempUrl}\\\\)`, 'g');\n              updatedContent = updatedContent.replace(imgPattern, `![${uploadedFile.filename}](${uploadedFile.url})`);\n            } else {\n              // 파일 링크 마크다운 패턴: [파일이름](tempUrl)\n              // 다운로드를 위해 특별한 형식으로 표시\n              const linkPattern = new RegExp(`\\\\[.*?\\\\]\\\\(${fileItem.tempUrl}\\\\)`, 'g');\n              updatedContent = updatedContent.replace(linkPattern, `[${uploadedFile.filename}](${uploadedFile.url} \"download\")`);\n            }\n          }\n        }\n      });\n      \n      // 3. 공지사항 데이터 준비\n      const noticeData = {\n        title: noticeTitle,\n        content: updatedContent,\n        isMainPageNotice,\n        authorId: currentUser.uid,\n        files: uploadedFiles,\n        updatedAt: serverTimestamp()\n      };\n      \n      // 4. 공지사항 저장 또는 수정\n      if (editingNotice) {\n        // 수정\n        await updateDoc(doc(db, 'notices', editingNotice.id), noticeData);\n        \n        // 상태 업데이트\n        setNotices(prev => prev.map(notice => \n          notice.id === editingNotice.id \n            ? { ...notice, ...noticeData, updatedAt: new Date() } \n            : notice\n        ));\n      } else {\n        // 새 공지사항\n        noticeData.createdAt = serverTimestamp();\n        \n        // 새 공지사항 추가\n        const newNoticeRef = doc(collection(db, 'notices'));\n        await setDoc(newNoticeRef, noticeData);\n        \n        // 상태 업데이트\n        setNotices(prev => [\n          {\n            id: newNoticeRef.id,\n            ...noticeData,\n            createdAt: new Date(),\n            updatedAt: new Date()\n          },\n          ...prev\n        ]);\n      }\n      \n      setDialogOpen(false);\n      setSaving(false);\n    } catch (error) {\n      console.error('공지사항 저장 중 오류:', error);\n      alert('공지사항을 저장하는 중 오류가 발생했습니다.');\n      setSaving(false);\n    }\n  };\n\n  // 공지사항 삭제\n  const handleDeleteNotice = async () => {\n    if (!noticeToDelete) return;\n    \n    try {\n      await deleteDoc(doc(db, 'notices', noticeToDelete.id));\n      \n      // 상태 업데이트\n      setNotices(prev => prev.filter(notice => notice.id !== noticeToDelete.id));\n      \n      setDeleteDialogOpen(false);\n      setNoticeToDelete(null);\n    } catch (error) {\n      console.error('공지사항 삭제 중 오류:', error);\n      alert('공지사항을 삭제하는 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 미리보기 모드 토글\n  const togglePreviewMode = () => {\n    setPreviewMode(!previewMode);\n  };\n\n  if (!currentUser) {\n    return <LoadingSpinner message=\"로그인 상태를 확인하는 중...\" />;\n  }\n\n  if (currentUser.role !== 'ADMIN') {\n    return null;\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box sx={{ mb: 4, display: 'flex', alignItems: 'center' }}>\n        <IconButton \n          onClick={() => navigate('/admin')} \n          sx={{ mr: 2 }}\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"h4\" component=\"h1\" sx={{ flexGrow: 1 }}>\n          공지사항 관리\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n          sx={{ \n            bgcolor: '#0066CC',\n            '&:hover': {\n              bgcolor: '#004C99'\n            }\n          }}\n        >\n          공지사항 작성\n        </Button>\n      </Box>\n\n      {loading ? (\n        <LoadingSpinner message=\"공지사항을 불러오는 중...\" />\n      ) : (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n                <TableCell width=\"50%\">제목</TableCell>\n                <TableCell>작성일</TableCell>\n                <TableCell>메인표시</TableCell>\n                <TableCell align=\"right\">관리</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {notices.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={4} align=\"center\" sx={{ py: 3 }}>\n                    등록된 공지사항이 없습니다.\n                  </TableCell>\n                </TableRow>\n              ) : (\n                notices.map((notice) => (\n                  <TableRow key={notice.id} hover>\n                    <TableCell>{notice.title}</TableCell>\n                    <TableCell>\n                      {notice.createdAt.toLocaleDateString('ko-KR')}\n                    </TableCell>\n                    <TableCell>\n                      {notice.isMainPageNotice ? '✓' : ''}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton \n                        onClick={() => handleOpenDialog(notice)}\n                        size=\"small\"\n                        sx={{ color: 'primary.main' }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton \n                        onClick={() => handleOpenDeleteDialog(notice)}\n                        size=\"small\"\n                        sx={{ color: 'error.main' }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      \n      {/* 공지사항 추가/수정 다이얼로그 */}\n      <Dialog \n        open={dialogOpen} \n        onClose={() => !saving && setDialogOpen(false)}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          {editingNotice ? '공지사항 수정' : '새 공지사항 작성'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ mb: 3, mt: 1 }}>\n            <TextField\n              fullWidth\n              label=\"제목\"\n              value={noticeTitle}\n              onChange={(e) => setNoticeTitle(e.target.value)}\n              required\n            />\n          </Box>\n          \n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMainPageNotice}\n                onChange={(e) => setIsMainPageNotice(e.target.checked)}\n              />\n            }\n            label=\"메인 페이지에 표시\"\n          />\n          \n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2, mb: 2 }}>\n            <Button\n              variant=\"outlined\"\n              startIcon={<EyeIcon />}\n              onClick={togglePreviewMode}\n            >\n              {previewMode ? \"에디터로 돌아가기\" : \"미리보기\"}\n            </Button>\n          </Box>\n\n          {!previewMode ? (\n            // 마크다운 에디터 컴포넌트 사용\n            <MarkdownEditor\n              value={noticeContent}\n              onChange={setNoticeContent}\n              onDrop={handleDrop}\n              placeholder=\"공지사항 내용을 입력해주세요. 이미지나 파일을 드래그하여 추가할 수 있습니다.\"\n            />\n          ) : (\n            <Box sx={{\n              height: '400px',\n              overflow: 'auto',\n              p: 3,\n              border: '1px solid',\n              borderColor: 'divider',\n              borderRadius: 1,\n              bgcolor: 'grey.50'\n            }}>\n              <ReactMarkdown>{noticeContent}</ReactMarkdown>\n            </Box>\n          )}\n\n          {/* 파일 업로더 컴포넌트 사용 */}\n          <FileUploader\n            files={files}\n            onAddFiles={handleAddFile}\n            onUpdateDescription={handleUpdateFileDescription}\n            onRemoveFile={handleRemoveFile}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setDialogOpen(false)}\n            disabled={saving}\n          >\n            취소\n          </Button>\n          <Button \n            onClick={handleSaveNotice}\n            variant=\"contained\"\n            disabled={saving}\n          >\n            {saving ? '저장 중...' : '저장'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* 삭제 확인 다이얼로그 */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n      >\n        <DialogTitle>공지사항 삭제</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            공지사항 \"{noticeToDelete?.title}\"을(를) 삭제하시겠습니까?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>\n            취소\n          </Button>\n          <Button \n            onClick={handleDeleteNotice} \n            color=\"error\"\n            autoFocus\n          >\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default AdminNotices;"],"names":["_ref","value","onChange","_ref$placeholder","placeholder","_ref$required","required","onDrop","textAreaRef","useRef","_useState2","useState","isDragging","setIsDragging","insertMarkdownSyntax","syntax","textArea","current","start","selectionStart","end","selectionEnd","selectedText","substring","insertText","concat","includes","split","map","line","join","i","newContent","setTimeout","focus","newCursorPos","length","setSelectionRange","React","Grid","container","spacing","item","xs","md","Typography","variant","gutterBottom","Box","sx","position","backgroundColor","onDragEnter","e","preventDefault","stopPropagation","onDragOver","onDragLeave","mb","p","border","borderColor","borderRadius","bgcolor","display","gap","flexWrap","Button","size","onClick","minWidth","px","style","textDecoration","Divider","orientation","flexItem","top","left","right","bottom","alignItems","justifyContent","zIndex","color","TextField","inputRef","fullWidth","multiline","rows","target","height","overflow","ReactMarkdown","files","onAddFiles","onUpdateDescription","onRemoveFile","component","startIcon","UploadIcon","type","hidden","multiple","Array","from","forEach","file","fileType","startsWith","fileId","Date","now","Math","random","description","List","ListItem","key","flexDirection","width","filename","name","IconButton","CloseIcon","mt","t","r","Symbol","n","iterator","o","toStringTag","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_slicedToArray","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","test","navigate","useNavigate","currentUser","useAuth","notices","setNotices","_useState4","loading","setLoading","_useState6","dialogOpen","setDialogOpen","_useState8","editingNotice","setEditingNotice","_useState0","noticeTitle","setNoticeTitle","_useState10","noticeContent","setNoticeContent","_useState12","isMainPageNotice","setIsMainPageNotice","_useState14","deleteDialogOpen","setDeleteDialogOpen","_useState16","noticeToDelete","setNoticeToDelete","_useState18","saving","setSaving","_useState20","setFiles","_useState22","previewMode","setPreviewMode","useEffect","role","alert","fetchNotices","_callee","noticesRef","q","querySnapshot","noticesList","_t","_context","collection","db","query","orderBy","getDocs","docs","doc","_doc$data$createdAt","_doc$data$createdAt$t","id","data","createdAt","toDate","console","error","handleOpenDialog","notice","undefined","title","content","handleAddFile","fileData","prev","_toConsumableArray","handleSaveNotice","_ref2","_callee3","uploadedFiles","updatedContent","noticeData","newNoticeRef","_t2","_context3","trim","all","_ref3","_callee2","fileItem","fileRef","fileSnapshot","url","_context2","ref","storage","uid","uploadBytes","getDownloadURL","_x","tempUrl","uploadedFile","find","imgPattern","RegExp","replace","linkPattern","authorId","updatedAt","serverTimestamp","updateDoc","setDoc","handleDeleteNotice","_ref4","_callee4","_t3","_context4","deleteDoc","Container","maxWidth","py","mr","ArrowBackIcon","flexGrow","AddIcon","LoadingSpinner","message","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","hover","toLocaleDateString","EditIcon","handleOpenDeleteDialog","DeleteIcon","Dialog","open","onClose","DialogTitle","DialogContent","label","FormControlLabel","control","Checkbox","checked","EyeIcon","MarkdownEditor","validFiles","dataTransfer","_step","cursorPosition","_iterator","_createForOfIteratorHelper","s","markdown","URL","createObjectURL","err","FileUploader","fileToRemove","DialogActions","disabled","DialogContentText","autoFocus"],"sourceRoot":""}