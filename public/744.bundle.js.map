{"version":3,"file":"744.bundle.js","mappings":"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","sources":["webpack://muibasic_starterkit/./src/components/home/NoticeSection.js","webpack://muibasic_starterkit/./src/pages/Home.js"],"sourcesContent":["// src/components/home/NoticeSection.js\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\nimport { useNavigate } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport { \n  collection, \n  query, \n  where, \n  getDocs, \n  orderBy, \n  limit, \n  onSnapshot \n} from 'firebase/firestore';\nimport { db } from '../../firebase';\n\nconst NoticeSection = () => {\n  const navigate = useNavigate();\n  const [mainNotices, setMainNotices] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // 마크다운 내용에서 이미지 URL 추출\n  const extractImagesFromMarkdown = (markdownContent) => {\n    if (!markdownContent) return [];\n    \n    // 마크다운 이미지 형식 ![alt](url) 패턴 찾기\n    const imageRegex = /!\\[.*?\\]\\((.*?)\\)/g;\n    const images = [];\n    let match;\n    \n    while ((match = imageRegex.exec(markdownContent)) !== null && images.length < 2) {\n      if (match[1] && !match[1].includes('download')) {\n        images.push(match[1]);\n      }\n    }\n    \n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // HTML 태그에서 이미지 URL 추출\n  const extractImagesFromHTML = (markdownContent) => {\n    if (!markdownContent) return [];\n    \n    // HTML 이미지 태그 <img src=\"url\"> 패턴 찾기\n    const htmlImageRegex = /<img.*?src=[\"'](.*?)[\"']/g;\n    const images = [];\n    let match;\n    \n    while ((match = htmlImageRegex.exec(markdownContent)) !== null && images.length < 2) {\n      if (match[1] && !match[1].includes('download')) {\n        images.push(match[1]);\n      }\n    }\n    \n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // 파일 목록에서 이미지 파일 추출\n  const extractImagesFromFiles = (files) => {\n    if (!files || !Array.isArray(files)) return [];\n    \n    // 타입이 IMAGE인 파일만 필터링\n    const imageFiles = files.filter(file => file.type === 'IMAGE' && file.url);\n    \n    // 최대 2개 반환\n    return imageFiles.slice(0, 2).map(file => file.url);\n  };\n\n  // 링크에서 이미지 URL을 추출 (일반적인 이미지 확장자 감지 및 타이틀 검사)\n  const extractImagesFromLinks = (links) => {\n    if (!links || !Array.isArray(links)) return [];\n    \n    const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.svg'];\n    const imageLinks = links.filter(link => {\n      if (!link.url) return false;\n      \n      // URL이 이미지 확장자로 끝나는지 확인\n      const url = link.url.toLowerCase();\n      const hasImageExtension = imageExtensions.some(ext => url.endsWith(ext));\n      \n      // 타이틀에 '이미지' 또는 'image'가 포함되어 있는지 확인\n      const titleHasImageKeyword = link.title && \n        (link.title.toLowerCase().includes('이미지') || \n         link.title.toLowerCase().includes('image'));\n      \n      return hasImageExtension || titleHasImageKeyword;\n    });\n    \n    return imageLinks.slice(0, 2).map(link => link.url);\n  };\n\n  // 마크다운 내의 링크 텍스트에서 이미지 링크 추출\n  const extractImagesFromLinkText = (markdownContent) => {\n    if (!markdownContent) return [];\n    \n    // 마크다운 링크 패턴 [text](url) 찾기\n    const linkRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n    const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.svg'];\n    const images = [];\n    let match;\n    \n    while ((match = linkRegex.exec(markdownContent)) !== null && images.length < 2) {\n      const linkText = match[1]; // 링크 텍스트\n      const url = match[2]; // URL\n      \n      if (!url) continue;\n      \n      // URL이 이미지 확장자로 끝나는지 확인\n      const urlLower = url.toLowerCase();\n      const isImageUrl = imageExtensions.some(ext => urlLower.endsWith(ext));\n      \n      // 링크 텍스트에 '이미지' 또는 'image'가 포함되어 있는지 확인\n      const textHasImageKeyword = \n        linkText.toLowerCase().includes('이미지') || \n        linkText.toLowerCase().includes('image');\n      \n      if (isImageUrl || textHasImageKeyword) {\n        images.push(url);\n      }\n    }\n    \n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // BasePostUpload.js 스타일의 이미지 URL 추출 (여러 소스에서 통합)\n  const getNoticeImages = (notice) => {\n    if (!notice) return [];\n    \n    // 1. 마크다운에서 이미지 추출\n    const markdownImages = extractImagesFromMarkdown(notice.content);\n    \n    // 2. HTML 태그에서 이미지 추출\n    const htmlImages = extractImagesFromHTML(notice.content);\n    \n    // 3. 파일 목록에서 이미지 추출\n    const fileImages = extractImagesFromFiles(notice.files);\n    \n    // 4. 링크에서 이미지 추출\n    const linkImages = extractImagesFromLinks(notice.links);\n    \n    // 5. 마크다운 링크 텍스트에서 이미지 추출 (새로 추가)\n    const linkTextImages = extractImagesFromLinkText(notice.content);\n    \n    // 모든 이미지 소스 합치기 (중복 URL 제거)\n    const allImages = [...markdownImages];\n    \n    // 각 이미지 소스를 순회하며 중복이 아닌 이미지만 추가\n    const addUniqueImages = (images) => {\n      images.forEach(url => {\n        if (!allImages.includes(url) && allImages.length < 2) {\n          allImages.push(url);\n        }\n      });\n    };\n    \n    // 각 소스에서 추출한 이미지들 추가\n    addUniqueImages(htmlImages);\n    addUniqueImages(fileImages);\n    addUniqueImages(linkImages);\n    addUniqueImages(linkTextImages);\n    \n    return allImages.slice(0, 2); // 최대 2개만 사용\n  };\n\n  useEffect(() => {\n    // 실시간 업데이트를 위한 리스너 설정\n    const fetchMainNotices = () => {\n      try {\n        setLoading(true);\n        \n        // 메인 페이지 공지 쿼리 설정\n        const noticesRef = collection(db, 'notices');\n        const mainNoticeQuery = query(\n          noticesRef,\n          where('isMainPageNotice', '==', true),\n          orderBy('createdAt', 'desc')\n        );\n        \n        // 실시간 리스너 설정\n        const unsubscribe = onSnapshot(mainNoticeQuery, async (querySnapshot) => {\n          if (!querySnapshot.empty) {\n            const noticesData = querySnapshot.docs.map(doc => {\n              const data = doc.data();\n              return {\n                id: doc.id,\n                ...data,\n                createdAt: data.createdAt?.toDate?.() || new Date()\n              };\n            });\n            \n            // 각 공지에 이미지 정보 추가 및 디버그 출력\n            const noticesWithImages = noticesData.map(notice => {\n              const images = getNoticeImages(notice);\n              console.log(`공지 ${notice.id} 이미지:`, images);\n              return {\n                ...notice,\n                images\n              };\n            });\n            \n            setMainNotices(noticesWithImages);\n          } else {\n            // 메인 공지가 없으면 최신 공지 가져오기\n            const recentQuery = query(\n              noticesRef,\n              orderBy('createdAt', 'desc'),\n              limit(1)\n            );\n            \n            const recentSnapshot = await getDocs(recentQuery);\n            \n            if (!recentSnapshot.empty) {\n              const recentDocs = recentSnapshot.docs.map(doc => {\n                const data = doc.data();\n                return {\n                  id: doc.id,\n                  ...data,\n                  createdAt: data.createdAt?.toDate?.() || new Date()\n                };\n              });\n              \n              // 각 공지에 이미지 정보 추가\n              const noticesWithImages = recentDocs.map(notice => ({\n                ...notice,\n                images: getNoticeImages(notice)\n              }));\n              \n              setMainNotices(noticesWithImages);\n            } else {\n              // 공지사항이 없는 경우\n              setMainNotices([]);\n            }\n          }\n          setLoading(false);\n        }, (error) => {\n          console.error('메인 공지사항 리스너 오류:', error);\n          setLoading(false);\n        });\n        \n        // 컴포넌트 언마운트 시 리스너 해제\n        return () => unsubscribe();\n      } catch (error) {\n        console.error('메인 공지사항 로드 중 오류:', error);\n        setLoading(false);\n        return () => {}; // 오류 발생 시 빈 클린업 함수 반환\n      }\n    };\n    \n    return fetchMainNotices();\n  }, []);\n\n  const handleNoticeClick = (noticeId) => {\n    navigate(`/notices/${noticeId}`);\n  };\n\n  // 로딩 상태일 때 스켈레톤 표시\n  if (loading) {\n    return (\n      <Box sx={{ p: { xs: 2, sm: 3, md: 4 }, bgcolor: '#f8f9fa', borderRadius: 2 }}>\n        <Skeleton width=\"40%\" height={32} sx={{ mb: 2 }} />\n        <Skeleton width=\"70%\" height={24} />\n        <Skeleton width=\"60%\" height={24} />\n        <Skeleton width=\"80%\" height={24} />\n        \n        <Box sx={{ display: 'flex', gap: 2, mt: 3, flexDirection: { xs: 'column', sm: 'row' } }}>\n          <Skeleton variant=\"rectangular\" width=\"100%\" height={200} />\n          <Skeleton variant=\"rectangular\" width=\"100%\" height={200} />\n        </Box>\n      </Box>\n    );\n  }\n\n  // 공지사항이 없을 때 기본 컨텐츠\n  if (mainNotices.length === 0) {\n    return (\n      <Box sx={{ p: { xs: 2, sm: 3, md: 4 }, bgcolor: '#f8f9fa', borderRadius: 2 }}>\n        <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n          포트폴리오 작성 가이드\n        </Typography>\n        <Typography variant=\"body1\">\n          당신의 우수한 프로젝트와 연구 경험을 더 돋보이게 만들어보세요. 기술 스택, 주요 기능, 성과 등을 잘 정리하여 기업과 연구실에 어필할 수 있는 포트폴리오를 작성해보세요.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      {mainNotices.map((notice, noticeIndex) => {\n        // 공지사항 내용 일부만 표시 (300자 제한)\n        const truncatedContent = notice.content?.length > 300 \n          ? `${notice.content.substring(0, 300)}...` \n          : notice.content;\n\n        return (\n          <Box \n            key={notice.id}\n            sx={{ \n              p: { xs: 2, sm: 3, md: 4 }, \n              bgcolor: '#f8f9fa', \n              borderRadius: 2,\n              cursor: 'pointer',\n              transition: 'transform 0.2s, box-shadow 0.2s',\n              '&:hover': {\n                transform: 'translateY(-3px)',\n                boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n              },\n              mb: noticeIndex < mainNotices.length - 1 ? 3 : 0\n            }}\n            onClick={() => handleNoticeClick(notice.id)}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, gap: 1 }}>\n              <Typography variant=\"h6\" sx={{ \n                fontWeight: 600,\n                color: '#0A2B5D'\n              }}>\n                {notice.title}\n              </Typography>\n              <Box\n                sx={{\n                  bgcolor: '#2196f3',\n                  color: 'white',\n                  px: 1,\n                  py: 0.5,\n                  borderRadius: 1,\n                  fontSize: '0.75rem',\n                  fontWeight: 500\n                }}\n              >\n                공지\n              </Box>\n            </Box>\n            \n            <Box sx={{ \n              mb: 2,\n              color: 'text.secondary',\n              fontSize: '0.875rem'\n            }}>\n              {notice.createdAt.toLocaleDateString('ko-KR', { \n                year: 'numeric', \n                month: 'long', \n                day: 'numeric' \n              })}\n            </Box>\n            \n            <Grid container spacing={2}>\n              {/* 텍스트 영역 */}\n              <Grid item xs={12} md={notice.images?.length > 0 ? 6 : 12}>\n                <Box sx={{ \n                  '& img': { display: 'none' },  // 이미지 숨김 (별도로 표시하므로)\n                  '& h1, & h2, & h3, & h4, & h5, & h6': { fontSize: '1rem', fontWeight: 600, my: 1 },\n                  '& p': { my: 1, lineHeight: 1.5 },\n                  overflow: 'hidden',\n                  wordBreak: 'break-word',\n                  WebkitLineClamp: 3,\n                  display: '-webkit-box',\n                  WebkitBoxOrient: 'vertical',\n                  textOverflow: 'ellipsis',\n                  maxHeight: notice.images?.length > 0 ? '15em' : '4.5em',\n                  mb: 2\n                }}>\n                  <ReactMarkdown>{truncatedContent}</ReactMarkdown>\n                </Box>\n              </Grid>\n              \n              {/* 이미지 영역 */}\n              {notice.images?.length > 0 && (\n                <Grid item xs={12} md={6}>\n                  <Grid container spacing={1}>\n                    {notice.images.map((imageUrl, index) => (\n                      <Grid item xs={notice.images.length === 1 ? 12 : 6} key={index}>\n                        <Box \n                          component=\"img\"\n                          src={imageUrl}\n                          alt={`공지사항 이미지 ${index + 1}`}\n                          sx={{\n                            width: '100%',\n                            height: { xs: '200px', sm: '180px' },\n                            objectFit: 'cover',\n                            borderRadius: 1,\n                            boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                          }}\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        );\n      })}\n    </>\n  );\n};\n\nexport default NoticeSection;","import Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link as RouterLink } from 'react-router-dom';\nimport React from 'react';\nimport NoticeSection from '../components/home/NoticeSection';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Home() {\n  const fontStyle = {\n    fontFamily: 'Quicksand, sans-serif'\n  };\n\n  const containerStyle = {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: { xs: '0 16px', sm: '0 24px', md: '0 32px' },\n    width: '100%',\n    boxSizing: 'border-box',\n  };\n\n  const sectionStyle = {\n    display: 'flex',\n    backgroundColor: '#fff',\n    borderRadius: 2,\n    overflow: 'hidden',\n    transition: 'transform 0.2s, box-shadow 0.2s',\n    cursor: 'pointer',\n    textDecoration: 'none',\n    color: 'inherit',\n    flexDirection: { xs: 'column', sm: 'column', md: 'row' },\n    gap: { xs: 0, sm: 0, md: 3 },\n    width: '100%',\n    boxSizing: 'border-box',\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n    }\n  };\n\n  const imageBoxStyle = {\n    width: { xs: '100%', sm: '100%', md: '280px' },\n    height: { xs: '200px', sm: '240px', md: '200px' },\n    flexShrink: 0,\n    '& img': { \n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }\n  };\n\n  const contentBoxStyle = {\n    flex: 1,\n    p: { xs: 2, sm: 3, md: 3 },\n    minWidth: 0  // 이것이 flex item의 overflow를 방지합니다\n  };\n\n  const navigate = useNavigate();\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{\n        display: 'flex',\n        flexDirection: { xs: 'column', sm: 'column', md: 'row' },\n        width: '100%'\n      }}>\n        {/* 왼쪽 파란색 섹션 */}\n        <Box sx={{ \n          width: { xs: '100%', sm: '100%', md: '30%' },\n          backgroundColor: 'rgb(0, 51, 161)', \n          color: 'white',\n          padding: { xs: '2rem 1rem', sm: '2rem', md: '2rem' }\n        }}>\n          <Box sx={containerStyle}>\n            <Typography variant=\"h2\" component=\"h1\" sx={{ \n                ...fontStyle,\n                fontWeight: 700,\n                lineHeight: 1.2,\n                marginBottom: '1rem',\n                fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' }\n            }}>\n                Innovation<br/>Starts<br/>Here<br/>\n            </Typography>\n            <Typography variant='body2' sx={fontStyle}>\n                아주대학교 산학협력 플랫폼에 오신 것을 환영합니다<br/><br/>\n                아주대학교의 뛰어난 연구진과 기업의 혁신적인 아이디어, 그리고 학생들의 신선한 도전이 만나는 곳입니다.\n            </Typography>\n          </Box>\n        </Box>\n        \n        {/* 오른쪽 컨텐츠 섹션 */}\n        <Box sx={{ \n          width: { xs: '100%', sm: '100%', md: '70%' },\n          padding: { xs: '1rem', sm: '1.5rem', md: '2rem' }\n        }}>\n          <Box sx={containerStyle}>\n            <Typography variant='h4' sx={{ \n              mb: 3, \n              fontWeight: 600,\n              ...fontStyle,\n              fontSize: { xs: '1.5rem', sm: '2rem', md: '2.25rem' }\n            }}>\n              원하시는 서비스를 선택해주세요\n            </Typography>\n            <Typography variant='body1' sx={{ \n              mb: 4,\n              ...fontStyle\n            }}>\n              연구 프로젝트 참여, 기술 협력, 산학 연계 등 다양한 서비스를 이용하실 수 있습니다.\n            </Typography>\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: { xs: 2, sm: 3, md: 4 } }}>\n              {/* 학생 포트폴리오 섹션 */}\n              <RouterLink to=\"/portfolios\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                <Box sx={sectionStyle}>\n                  <Box sx={imageBoxStyle}>\n                    <img src=\"/student.png\" alt=\"학생 포트폴리오\" />\n                  </Box>\n                  <Box sx={contentBoxStyle}>\n                    <Typography variant=\"h5\" sx={{ \n                      fontWeight: 600,\n                      mb: 1,\n                      ...fontStyle,\n                      fontSize: { xs: '1.25rem', sm: '1.5rem', md: '1.5rem' }\n                    }}>\n                      학생 포트폴리오 보기 \n                    </Typography>\n                    <Typography variant=\"body2\" sx={fontStyle}>\n                      <br />아주대학교 학생들의 다양한 프로젝트 경험과 연구 성과를 한눈에 확인할 수 있습니다. \n                      <br />각 학생의 포트폴리오를 통해 전공 분야, 기술 스택, 프로젝트 이력을 살펴보고 관심 있는 인재에게 직접 프로젝트 참여나 채용을 제안해보세요.\n                    </Typography>\n                  </Box>\n                </Box>\n              </RouterLink>\n\n              {/* 연구실 목록 섹션 */}\n              <RouterLink to=\"/labs\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                <Box sx={sectionStyle}>\n                  <Box sx={imageBoxStyle}>\n                    <img src=\"/lab.png\" alt=\"연구실 목록\" />\n                  </Box>\n                  <Box sx={contentBoxStyle}>\n                    <Typography variant=\"h5\" sx={{ \n                      fontWeight: 600,\n                      mb: 1,\n                      ...fontStyle,\n                      fontSize: { xs: '1.25rem', sm: '1.5rem', md: '1.5rem' }\n                    }}>\n                      연구실 목록 보기\n                    </Typography>\n                    <Typography variant=\"body2\" sx={fontStyle}>\n                      <br />아주대학교의 다양한 연구실 정보와 진행 중인 연구 프로젝트를 확인할 수 있습니다. 각 연구실의 주요 연구 분야, 실적, 참여 가능한 프로젝트를 살펴보고 관심 있는 분야에 직접 문의해보세요.\n                    </Typography>\n                  </Box>\n                </Box>\n              </RouterLink>\n\n              {/* 기업 뉴스 섹션 */}\n              <RouterLink to=\"/companies\" style={{ textDecoration: 'none', color: 'inherit' }}>\n                <Box sx={sectionStyle}>\n                  <Box sx={imageBoxStyle}>\n                    <img src=\"/company.png\" alt=\"기업 뉴스\" />\n                  </Box>\n                  <Box sx={contentBoxStyle}>\n                    <Typography variant=\"h5\" sx={{ \n                      fontWeight: 600,\n                      mb: 1,\n                      ...fontStyle,\n                      fontSize: { xs: '1.25rem', sm: '1.5rem', md: '1.5rem' }\n                    }}>\n                      기업 뉴스 보기\n                    </Typography>\n                    <Typography variant=\"body2\" sx={fontStyle}>\n                      <br />산학협력에 참여하는 다양한 기업들의 정보와 진행 중인 프로젝트를 확인할 수 있습니다. 기업별 진행 프로젝트, 기술 협력 요청, 채용 정보를 살펴보고 관심 있는 기업에 직접 지원해보세요.\n                    </Typography>\n                  </Box>\n                </Box>\n              </RouterLink>\n            \n            {/* 구분선 */}\n            <Box sx={{ \n              my: { xs: 4, sm: 5, md: 6 },\n              borderBottom: '1px solid #e0e0e0'\n            }} />\n\n            {/* 공지사항 섹션 */}\n            <Box sx={{ mb: { xs: 3, sm: 4, md: 5 } }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 3, gap: 2 }}>\n                <Typography variant='h4' sx={{ \n                  fontWeight: 600,\n                  ...fontStyle,\n                  fontSize: { xs: '1.5rem', sm: '2rem', md: '2.25rem' }\n                }}>\n                  공지사항\n                </Typography>\n                <Box \n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    bgcolor: 'rgba(33, 150, 243, 0.1)',\n                    color: '#2196f3',\n                    px: 1.5,\n                    py: 0.5,\n                    borderRadius: 1,\n                    fontSize: '0.75rem',\n                    fontWeight: 600,\n                    cursor: 'pointer',\n                    '&:hover': {\n                      bgcolor: 'rgba(33, 150, 243, 0.2)',\n                    },\n                    ...fontStyle\n                  }}\n                  onClick={() => navigate('/notices')}\n                >\n                  모든 공지 보기\n                </Box>\n              </Box>\n\n              <NoticeSection />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  </Box>\n  );\n}\n\nexport default Home;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_slicedToArray","Array","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","navigate","useNavigate","_useState2","useState","mainNotices","setMainNotices","_useState4","loading","setLoading","getNoticeImages","notice","files","markdownImages","markdownContent","match","imageRegex","images","exec","includes","extractImagesFromMarkdown","content","htmlImages","htmlImageRegex","extractImagesFromHTML","fileImages","file","type","url","map","linkImages","links","imageExtensions","link","toLowerCase","hasImageExtension","some","ext","endsWith","titleHasImageKeyword","title","extractImagesFromLinks","linkTextImages","linkRegex","_loop","linkText","urlLower","isImageUrl","textHasImageKeyword","extractImagesFromLinkText","allImages","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","addUniqueImages","useEffect","noticesRef","collection","db","mainNoticeQuery","query","where","orderBy","unsubscribe","onSnapshot","_ref","_callee","querySnapshot","noticesData","noticesWithImages","recentQuery","recentSnapshot","recentDocs","_noticesWithImages","_context","empty","docs","doc","_data$createdAt","_data$createdAt$toDat","data","id","createdAt","toDate","Date","console","log","concat","limit","getDocs","_data$createdAt2","_data$createdAt2$toDa","_next","_throw","_x","error","fetchMainNotices","React","Box","sx","xs","sm","md","bgcolor","borderRadius","Skeleton","width","height","mb","display","gap","mt","flexDirection","variant","Typography","fontWeight","noticeIndex","_notice$content","_notice$images","_notice$images2","_notice$images3","truncatedContent","substring","key","cursor","transition","transform","boxShadow","onClick","noticeId","alignItems","color","px","py","fontSize","toLocaleDateString","year","month","day","Grid","container","spacing","item","my","lineHeight","overflow","wordBreak","WebkitLineClamp","WebkitBoxOrient","textOverflow","maxHeight","ReactMarkdown","imageUrl","index","component","src","alt","objectFit","fontStyle","fontFamily","containerStyle","maxWidth","margin","padding","boxSizing","sectionStyle","backgroundColor","textDecoration","imageBoxStyle","flexShrink","contentBoxStyle","flex","minWidth","marginBottom","RouterLink","to","style","borderBottom","NoticeSection"],"sourceRoot":""}