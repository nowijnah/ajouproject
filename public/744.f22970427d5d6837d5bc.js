"use strict";(self.webpackChunkmuibasic_starterkit=self.webpackChunkmuibasic_starterkit||[]).push([[744],{9744:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ pages_Home)\n});\n\n// EXTERNAL MODULE: ./node_modules/@mui/material/Typography/Typography.js + 1 modules\nvar Typography = __webpack_require__(6454);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Box/Box.js + 2 modules\nvar Box = __webpack_require__(9067);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/development/chunk-SYFQ2XB5.mjs\nvar chunk_SYFQ2XB5 = __webpack_require__(4753);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Skeleton/Skeleton.js + 3 modules\nvar Skeleton = __webpack_require__(1023);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Grid/Grid.js + 2 modules\nvar Grid = __webpack_require__(8239);\n// EXTERNAL MODULE: ./node_modules/react-markdown/lib/index.js + 129 modules\nvar lib = __webpack_require__(2230);\n// EXTERNAL MODULE: ./node_modules/firebase/firestore/dist/esm/index.esm.js + 3 modules\nvar index_esm = __webpack_require__(7594);\n// EXTERNAL MODULE: ./src/firebase.js\nvar firebase = __webpack_require__(7909);\n;// ./src/components/home/NoticeSection.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n// src/components/home/NoticeSection.js\n\n\n\n\n\n\n\n\n\nvar NoticeSection = function NoticeSection() {\n  var navigate = (0,chunk_SYFQ2XB5/* useNavigate */.Zp)();\n  var _useState = (0,react.useState)([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mainNotices = _useState2[0],\n    setMainNotices = _useState2[1];\n  var _useState3 = (0,react.useState)(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n\n  // 마크다운 내용에서 이미지 URL 추출\n  var extractImagesFromMarkdown = function extractImagesFromMarkdown(markdownContent) {\n    if (!markdownContent) return [];\n\n    // 마크다운 이미지 형식 ![alt](url) 패턴 찾기\n    var imageRegex = /!\\[.*?\\]\\((.*?)\\)/g;\n    var images = [];\n    var match;\n    while ((match = imageRegex.exec(markdownContent)) !== null && images.length < 2) {\n      if (match[1] && !match[1].includes(\'download\')) {\n        images.push(match[1]);\n      }\n    }\n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // HTML 태그에서 이미지 URL 추출\n  var extractImagesFromHTML = function extractImagesFromHTML(markdownContent) {\n    if (!markdownContent) return [];\n\n    // HTML 이미지 태그 <img src="url"> 패턴 찾기\n    var htmlImageRegex = /<img.*?src=["\'](.*?)["\']/g;\n    var images = [];\n    var match;\n    while ((match = htmlImageRegex.exec(markdownContent)) !== null && images.length < 2) {\n      if (match[1] && !match[1].includes(\'download\')) {\n        images.push(match[1]);\n      }\n    }\n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // 파일 목록에서 이미지 파일 추출\n  var extractImagesFromFiles = function extractImagesFromFiles(files) {\n    if (!files || !Array.isArray(files)) return [];\n\n    // 타입이 IMAGE인 파일만 필터링\n    var imageFiles = files.filter(function (file) {\n      return file.type === \'IMAGE\' && file.url;\n    });\n\n    // 최대 2개 반환\n    return imageFiles.slice(0, 2).map(function (file) {\n      return file.url;\n    });\n  };\n\n  // 링크에서 이미지 URL을 추출 (일반적인 이미지 확장자 감지 및 타이틀 검사)\n  var extractImagesFromLinks = function extractImagesFromLinks(links) {\n    if (!links || !Array.isArray(links)) return [];\n    var imageExtensions = [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\', \'.webp\', \'.svg\'];\n    var imageLinks = links.filter(function (link) {\n      if (!link.url) return false;\n\n      // URL이 이미지 확장자로 끝나는지 확인\n      var url = link.url.toLowerCase();\n      var hasImageExtension = imageExtensions.some(function (ext) {\n        return url.endsWith(ext);\n      });\n\n      // 타이틀에 \'이미지\' 또는 \'image\'가 포함되어 있는지 확인\n      var titleHasImageKeyword = link.title && (link.title.toLowerCase().includes(\'이미지\') || link.title.toLowerCase().includes(\'image\'));\n      return hasImageExtension || titleHasImageKeyword;\n    });\n    return imageLinks.slice(0, 2).map(function (link) {\n      return link.url;\n    });\n  };\n\n  // 마크다운 내의 링크 텍스트에서 이미지 링크 추출\n  var extractImagesFromLinkText = function extractImagesFromLinkText(markdownContent) {\n    if (!markdownContent) return [];\n\n    // 마크다운 링크 패턴 [text](url) 찾기\n    var linkRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n    var imageExtensions = [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\', \'.webp\', \'.svg\'];\n    var images = [];\n    var match;\n    var _loop = function _loop() {\n      var linkText = match[1]; // 링크 텍스트\n      var url = match[2]; // URL\n\n      if (!url) return 1; // continue\n\n      // URL이 이미지 확장자로 끝나는지 확인\n      var urlLower = url.toLowerCase();\n      var isImageUrl = imageExtensions.some(function (ext) {\n        return urlLower.endsWith(ext);\n      });\n\n      // 링크 텍스트에 \'이미지\' 또는 \'image\'가 포함되어 있는지 확인\n      var textHasImageKeyword = linkText.toLowerCase().includes(\'이미지\') || linkText.toLowerCase().includes(\'image\');\n      if (isImageUrl || textHasImageKeyword) {\n        images.push(url);\n      }\n    };\n    while ((match = linkRegex.exec(markdownContent)) !== null && images.length < 2) {\n      if (_loop()) continue;\n    }\n    return images.slice(0, 2); // 최대 2개까지만 반환\n  };\n\n  // BasePostUpload.js 스타일의 이미지 URL 추출 (여러 소스에서 통합)\n  var getNoticeImages = function getNoticeImages(notice) {\n    if (!notice) return [];\n\n    // 1. 마크다운에서 이미지 추출\n    var markdownImages = extractImagesFromMarkdown(notice.content);\n\n    // 2. HTML 태그에서 이미지 추출\n    var htmlImages = extractImagesFromHTML(notice.content);\n\n    // 3. 파일 목록에서 이미지 추출\n    var fileImages = extractImagesFromFiles(notice.files);\n\n    // 4. 링크에서 이미지 추출\n    var linkImages = extractImagesFromLinks(notice.links);\n\n    // 5. 마크다운 링크 텍스트에서 이미지 추출 (새로 추가)\n    var linkTextImages = extractImagesFromLinkText(notice.content);\n\n    // 모든 이미지 소스 합치기 (중복 URL 제거)\n    var allImages = _toConsumableArray(markdownImages);\n\n    // 각 이미지 소스를 순회하며 중복이 아닌 이미지만 추가\n    var addUniqueImages = function addUniqueImages(images) {\n      images.forEach(function (url) {\n        if (!allImages.includes(url) && allImages.length < 2) {\n          allImages.push(url);\n        }\n      });\n    };\n\n    // 각 소스에서 추출한 이미지들 추가\n    addUniqueImages(htmlImages);\n    addUniqueImages(fileImages);\n    addUniqueImages(linkImages);\n    addUniqueImages(linkTextImages);\n    return allImages.slice(0, 2); // 최대 2개만 사용\n  };\n  (0,react.useEffect)(function () {\n    // 실시간 업데이트를 위한 리스너 설정\n    var fetchMainNotices = function fetchMainNotices() {\n      try {\n        setLoading(true);\n\n        // 메인 페이지 공지 쿼리 설정\n        var noticesRef = (0,index_esm/* collection */.rJ)(firebase.db, \'notices\');\n        var mainNoticeQuery = (0,index_esm/* query */.P)(noticesRef, (0,index_esm/* where */._M)(\'isMainPageNotice\', \'==\', true), (0,index_esm/* orderBy */.My)(\'createdAt\', \'desc\'));\n\n        // 실시간 리스너 설정\n        var unsubscribe = (0,index_esm/* onSnapshot */.aQ)(mainNoticeQuery, /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(querySnapshot) {\n            var noticesData, noticesWithImages, recentQuery, recentSnapshot, recentDocs, _noticesWithImages;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  if (querySnapshot.empty) {\n                    _context.next = 6;\n                    break;\n                  }\n                  noticesData = querySnapshot.docs.map(function (doc) {\n                    var _data$createdAt, _data$createdAt$toDat;\n                    var data = doc.data();\n                    return _objectSpread(_objectSpread({\n                      id: doc.id\n                    }, data), {}, {\n                      createdAt: ((_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 || (_data$createdAt$toDat = _data$createdAt.toDate) === null || _data$createdAt$toDat === void 0 ? void 0 : _data$createdAt$toDat.call(_data$createdAt)) || new Date()\n                    });\n                  }); // 각 공지에 이미지 정보 추가 및 디버그 출력\n                  noticesWithImages = noticesData.map(function (notice) {\n                    var images = getNoticeImages(notice);\n                    console.log("\\uACF5\\uC9C0 ".concat(notice.id, " \\uC774\\uBBF8\\uC9C0:"), images);\n                    return _objectSpread(_objectSpread({}, notice), {}, {\n                      images: images\n                    });\n                  });\n                  setMainNotices(noticesWithImages);\n                  _context.next = 11;\n                  break;\n                case 6:\n                  // 메인 공지가 없으면 최신 공지 가져오기\n                  recentQuery = (0,index_esm/* query */.P)(noticesRef, (0,index_esm/* orderBy */.My)(\'createdAt\', \'desc\'), (0,index_esm/* limit */.AB)(1));\n                  _context.next = 9;\n                  return (0,index_esm/* getDocs */.GG)(recentQuery);\n                case 9:\n                  recentSnapshot = _context.sent;\n                  if (!recentSnapshot.empty) {\n                    recentDocs = recentSnapshot.docs.map(function (doc) {\n                      var _data$createdAt2, _data$createdAt2$toDa;\n                      var data = doc.data();\n                      return _objectSpread(_objectSpread({\n                        id: doc.id\n                      }, data), {}, {\n                        createdAt: ((_data$createdAt2 = data.createdAt) === null || _data$createdAt2 === void 0 || (_data$createdAt2$toDa = _data$createdAt2.toDate) === null || _data$createdAt2$toDa === void 0 ? void 0 : _data$createdAt2$toDa.call(_data$createdAt2)) || new Date()\n                      });\n                    }); // 각 공지에 이미지 정보 추가\n                    _noticesWithImages = recentDocs.map(function (notice) {\n                      return _objectSpread(_objectSpread({}, notice), {}, {\n                        images: getNoticeImages(notice)\n                      });\n                    });\n                    setMainNotices(_noticesWithImages);\n                  } else {\n                    // 공지사항이 없는 경우\n                    setMainNotices([]);\n                  }\n                case 11:\n                  setLoading(false);\n                case 12:\n                case "end":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(), function (error) {\n          console.error(\'메인 공지사항 리스너 오류:\', error);\n          setLoading(false);\n        });\n\n        // 컴포넌트 언마운트 시 리스너 해제\n        return function () {\n          return unsubscribe();\n        };\n      } catch (error) {\n        console.error(\'메인 공지사항 로드 중 오류:\', error);\n        setLoading(false);\n        return function () {}; // 오류 발생 시 빈 클린업 함수 반환\n      }\n    };\n    return fetchMainNotices();\n  }, []);\n  var handleNoticeClick = function handleNoticeClick(noticeId) {\n    navigate("/notices/".concat(noticeId));\n  };\n\n  // 로딩 상태일 때 스켈레톤 표시\n  if (loading) {\n    return /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        p: {\n          xs: 2,\n          sm: 3,\n          md: 4\n        },\n        bgcolor: \'#f8f9fa\',\n        borderRadius: 2\n      }\n    }, /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      width: "40%",\n      height: 32,\n      sx: {\n        mb: 2\n      }\n    }), /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      width: "70%",\n      height: 24\n    }), /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      width: "60%",\n      height: 24\n    }), /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      width: "80%",\n      height: 24\n    }), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        display: \'flex\',\n        gap: 2,\n        mt: 3,\n        flexDirection: {\n          xs: \'column\',\n          sm: \'row\'\n        }\n      }\n    }, /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      variant: "rectangular",\n      width: "100%",\n      height: 200\n    }), /*#__PURE__*/react_default().createElement(Skeleton/* default */.A, {\n      variant: "rectangular",\n      width: "100%",\n      height: 200\n    })));\n  }\n\n  // 공지사항이 없을 때 기본 컨텐츠\n  if (mainNotices.length === 0) {\n    return /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        p: {\n          xs: 2,\n          sm: 3,\n          md: 4\n        },\n        bgcolor: \'#f8f9fa\',\n        borderRadius: 2\n      }\n    }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n      variant: "h6",\n      sx: {\n        fontWeight: 600,\n        mb: 2\n      }\n    }, "\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uC791\\uC131 \\uAC00\\uC774\\uB4DC"), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n      variant: "body1"\n    }, "\\uB2F9\\uC2E0\\uC758 \\uC6B0\\uC218\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uC640 \\uC5F0\\uAD6C \\uACBD\\uD5D8\\uC744 \\uB354 \\uB3CB\\uBCF4\\uC774\\uAC8C \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC138\\uC694. \\uAE30\\uC220 \\uC2A4\\uD0DD, \\uC8FC\\uC694 \\uAE30\\uB2A5, \\uC131\\uACFC \\uB4F1\\uC744 \\uC798 \\uC815\\uB9AC\\uD558\\uC5EC \\uAE30\\uC5C5\\uACFC \\uC5F0\\uAD6C\\uC2E4\\uC5D0 \\uC5B4\\uD544\\uD560 \\uC218 \\uC788\\uB294 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\\uB97C \\uC791\\uC131\\uD574\\uBCF4\\uC138\\uC694."));\n  }\n  return /*#__PURE__*/react_default().createElement((react_default()).Fragment, null, mainNotices.map(function (notice, noticeIndex) {\n    var _notice$content, _notice$images, _notice$images2, _notice$images3;\n    // 공지사항 내용 일부만 표시 (300자 제한)\n    var truncatedContent = ((_notice$content = notice.content) === null || _notice$content === void 0 ? void 0 : _notice$content.length) > 300 ? "".concat(notice.content.substring(0, 300), "...") : notice.content;\n    return /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      key: notice.id,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 3,\n          md: 4\n        },\n        bgcolor: \'#f8f9fa\',\n        borderRadius: 2,\n        cursor: \'pointer\',\n        transition: \'transform 0.2s, box-shadow 0.2s\',\n        \'&:hover\': {\n          transform: \'translateY(-3px)\',\n          boxShadow: \'0 4px 12px rgba(0,0,0,0.1)\'\n        },\n        mb: noticeIndex < mainNotices.length - 1 ? 3 : 0\n      },\n      onClick: function onClick() {\n        return handleNoticeClick(notice.id);\n      }\n    }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        display: \'flex\',\n        alignItems: \'center\',\n        mb: 2,\n        gap: 1\n      }\n    }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n      variant: "h6",\n      sx: {\n        fontWeight: 600,\n        color: \'#0A2B5D\'\n      }\n    }, notice.title), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        bgcolor: \'#2196f3\',\n        color: \'white\',\n        px: 1,\n        py: 0.5,\n        borderRadius: 1,\n        fontSize: \'0.75rem\',\n        fontWeight: 500\n      }\n    }, "\\uACF5\\uC9C0")), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        mb: 2,\n        color: \'text.secondary\',\n        fontSize: \'0.875rem\'\n      }\n    }, notice.createdAt.toLocaleDateString(\'ko-KR\', {\n      year: \'numeric\',\n      month: \'long\',\n      day: \'numeric\'\n    })), /*#__PURE__*/react_default().createElement(Grid/* default */.Ay, {\n      container: true,\n      spacing: 2\n    }, /*#__PURE__*/react_default().createElement(Grid/* default */.Ay, {\n      item: true,\n      xs: 12,\n      md: ((_notice$images = notice.images) === null || _notice$images === void 0 ? void 0 : _notice$images.length) > 0 ? 6 : 12\n    }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n      sx: {\n        \'& img\': {\n          display: \'none\'\n        },\n        // 이미지 숨김 (별도로 표시하므로)\n        \'& h1, & h2, & h3, & h4, & h5, & h6\': {\n          fontSize: \'1rem\',\n          fontWeight: 600,\n          my: 1\n        },\n        \'& p\': {\n          my: 1,\n          lineHeight: 1.5\n        },\n        overflow: \'hidden\',\n        wordBreak: \'break-word\',\n        WebkitLineClamp: 3,\n        display: \'-webkit-box\',\n        WebkitBoxOrient: \'vertical\',\n        textOverflow: \'ellipsis\',\n        maxHeight: ((_notice$images2 = notice.images) === null || _notice$images2 === void 0 ? void 0 : _notice$images2.length) > 0 ? \'15em\' : \'4.5em\',\n        mb: 2\n      }\n    }, /*#__PURE__*/react_default().createElement(lib/* Markdown */.oz, null, truncatedContent))), ((_notice$images3 = notice.images) === null || _notice$images3 === void 0 ? void 0 : _notice$images3.length) > 0 && /*#__PURE__*/react_default().createElement(Grid/* default */.Ay, {\n      item: true,\n      xs: 12,\n      md: 6\n    }, /*#__PURE__*/react_default().createElement(Grid/* default */.Ay, {\n      container: true,\n      spacing: 1\n    }, notice.images.map(function (imageUrl, index) {\n      return /*#__PURE__*/react_default().createElement(Grid/* default */.Ay, {\n        item: true,\n        xs: notice.images.length === 1 ? 12 : 6,\n        key: index\n      }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n        component: "img",\n        src: imageUrl,\n        alt: "\\uACF5\\uC9C0\\uC0AC\\uD56D \\uC774\\uBBF8\\uC9C0 ".concat(index + 1),\n        sx: {\n          width: \'100%\',\n          height: {\n            xs: \'200px\',\n            sm: \'180px\'\n          },\n          objectFit: \'cover\',\n          borderRadius: 1,\n          boxShadow: \'0 2px 8px rgba(0,0,0,0.1)\'\n        }\n      }));\n    })))));\n  }));\n};\n/* harmony default export */ const home_NoticeSection = (NoticeSection);\n;// ./src/pages/Home.js\nfunction Home_typeof(o) { "@babel/helpers - typeof"; return Home_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, Home_typeof(o); }\nfunction Home_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction Home_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? Home_ownKeys(Object(t), !0).forEach(function (r) { Home_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Home_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction Home_defineProperty(e, r, t) { return (r = Home_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction Home_toPropertyKey(t) { var i = Home_toPrimitive(t, "string"); return "symbol" == Home_typeof(i) ? i : i + ""; }\nfunction Home_toPrimitive(t, r) { if ("object" != Home_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != Home_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\n\n\n\n\n\nfunction Home() {\n  var fontStyle = {\n    fontFamily: \'Quicksand, sans-serif\'\n  };\n  var containerStyle = {\n    maxWidth: \'1200px\',\n    margin: \'0 auto\',\n    padding: {\n      xs: \'0 16px\',\n      sm: \'0 24px\',\n      md: \'0 32px\'\n    },\n    width: \'100%\',\n    boxSizing: \'border-box\'\n  };\n  var sectionStyle = {\n    display: \'flex\',\n    backgroundColor: \'#fff\',\n    borderRadius: 2,\n    overflow: \'hidden\',\n    transition: \'transform 0.2s, box-shadow 0.2s\',\n    cursor: \'pointer\',\n    textDecoration: \'none\',\n    color: \'inherit\',\n    flexDirection: {\n      xs: \'column\',\n      sm: \'column\',\n      md: \'row\'\n    },\n    gap: {\n      xs: 0,\n      sm: 0,\n      md: 3\n    },\n    width: \'100%\',\n    boxSizing: \'border-box\',\n    \'&:hover\': {\n      transform: \'translateY(-4px)\',\n      boxShadow: \'0 4px 8px rgba(0,0,0,0.1)\'\n    }\n  };\n  var imageBoxStyle = {\n    width: {\n      xs: \'100%\',\n      sm: \'100%\',\n      md: \'280px\'\n    },\n    height: {\n      xs: \'200px\',\n      sm: \'240px\',\n      md: \'200px\'\n    },\n    flexShrink: 0,\n    \'& img\': {\n      width: \'100%\',\n      height: \'100%\',\n      objectFit: \'cover\'\n    }\n  };\n  var contentBoxStyle = {\n    flex: 1,\n    p: {\n      xs: 2,\n      sm: 3,\n      md: 3\n    },\n    minWidth: 0 // 이것이 flex item의 overflow를 방지합니다\n  };\n  var navigate = (0,chunk_SYFQ2XB5/* useNavigate */.Zp)();\n  return /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      display: \'flex\',\n      flexDirection: {\n        xs: \'column\',\n        sm: \'column\',\n        md: \'row\'\n      },\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      width: {\n        xs: \'100%\',\n        sm: \'100%\',\n        md: \'30%\'\n      },\n      backgroundColor: \'rgb(0, 51, 161)\',\n      color: \'white\',\n      padding: {\n        xs: \'2rem 1rem\',\n        sm: \'2rem\',\n        md: \'2rem\'\n      }\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: containerStyle\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h2",\n    component: "h1",\n    sx: Home_objectSpread(Home_objectSpread({}, fontStyle), {}, {\n      fontWeight: 700,\n      lineHeight: 1.2,\n      marginBottom: \'1rem\',\n      fontSize: {\n        xs: \'2rem\',\n        sm: \'2.5rem\',\n        md: \'3rem\'\n      }\n    })\n  }, "Innovation", /*#__PURE__*/react_default().createElement("br", null), "Starts", /*#__PURE__*/react_default().createElement("br", null), "Here", /*#__PURE__*/react_default().createElement("br", null)), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "body2",\n    sx: fontStyle\n  }, "\\uC544\\uC8FC\\uB300\\uD559\\uAD50 \\uC0B0\\uD559\\uD611\\uB825 \\uD50C\\uB7AB\\uD3FC\\uC5D0 \\uC624\\uC2E0 \\uAC83\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4", /*#__PURE__*/react_default().createElement("br", null), /*#__PURE__*/react_default().createElement("br", null), "\\uC544\\uC8FC\\uB300\\uD559\\uAD50\\uC758 \\uB6F0\\uC5B4\\uB09C \\uC5F0\\uAD6C\\uC9C4\\uACFC \\uAE30\\uC5C5\\uC758 \\uD601\\uC2E0\\uC801\\uC778 \\uC544\\uC774\\uB514\\uC5B4, \\uADF8\\uB9AC\\uACE0 \\uD559\\uC0DD\\uB4E4\\uC758 \\uC2E0\\uC120\\uD55C \\uB3C4\\uC804\\uC774 \\uB9CC\\uB098\\uB294 \\uACF3\\uC785\\uB2C8\\uB2E4."))), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      width: {\n        xs: \'100%\',\n        sm: \'100%\',\n        md: \'70%\'\n      },\n      padding: {\n        xs: \'1rem\',\n        sm: \'1.5rem\',\n        md: \'2rem\'\n      }\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: containerStyle\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h4",\n    sx: Home_objectSpread(Home_objectSpread({\n      mb: 3,\n      fontWeight: 600\n    }, fontStyle), {}, {\n      fontSize: {\n        xs: \'1.5rem\',\n        sm: \'2rem\',\n        md: \'2.25rem\'\n      }\n    })\n  }, "\\uC6D0\\uD558\\uC2DC\\uB294 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694"), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "body1",\n    sx: Home_objectSpread({\n      mb: 4\n    }, fontStyle)\n  }, "\\uC5F0\\uAD6C \\uD504\\uB85C\\uC81D\\uD2B8 \\uCC38\\uC5EC, \\uAE30\\uC220 \\uD611\\uB825, \\uC0B0\\uD559 \\uC5F0\\uACC4 \\uB4F1 \\uB2E4\\uC591\\uD55C \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4."), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      display: \'flex\',\n      flexDirection: \'column\',\n      gap: {\n        xs: 2,\n        sm: 3,\n        md: 4\n      }\n    }\n  }, /*#__PURE__*/react_default().createElement(chunk_SYFQ2XB5/* Link */.N_, {\n    to: "/portfolios",\n    style: {\n      textDecoration: \'none\',\n      color: \'inherit\'\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: sectionStyle\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: imageBoxStyle\n  }, /*#__PURE__*/react_default().createElement("img", {\n    src: "/student.png",\n    alt: "\\uD559\\uC0DD \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624"\n  })), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: contentBoxStyle\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h5",\n    sx: Home_objectSpread(Home_objectSpread({\n      fontWeight: 600,\n      mb: 1\n    }, fontStyle), {}, {\n      fontSize: {\n        xs: \'1.25rem\',\n        sm: \'1.5rem\',\n        md: \'1.5rem\'\n      }\n    })\n  }, "\\uD559\\uC0DD \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uBCF4\\uAE30"), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "body2",\n    sx: fontStyle\n  }, /*#__PURE__*/react_default().createElement("br", null), "\\uC544\\uC8FC\\uB300\\uD559\\uAD50 \\uD559\\uC0DD\\uB4E4\\uC758 \\uB2E4\\uC591\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8 \\uACBD\\uD5D8\\uACFC \\uC5F0\\uAD6C \\uC131\\uACFC\\uB97C \\uD55C\\uB208\\uC5D0 \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.", /*#__PURE__*/react_default().createElement("br", null), "\\uAC01 \\uD559\\uC0DD\\uC758 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\\uB97C \\uD1B5\\uD574 \\uC804\\uACF5 \\uBD84\\uC57C, \\uAE30\\uC220 \\uC2A4\\uD0DD, \\uD504\\uB85C\\uC81D\\uD2B8 \\uC774\\uB825\\uC744 \\uC0B4\\uD3B4\\uBCF4\\uACE0 \\uAD00\\uC2EC \\uC788\\uB294 \\uC778\\uC7AC\\uC5D0\\uAC8C \\uC9C1\\uC811 \\uD504\\uB85C\\uC81D\\uD2B8 \\uCC38\\uC5EC\\uB098 \\uCC44\\uC6A9\\uC744 \\uC81C\\uC548\\uD574\\uBCF4\\uC138\\uC694.")))), /*#__PURE__*/react_default().createElement(chunk_SYFQ2XB5/* Link */.N_, {\n    to: "/labs",\n    style: {\n      textDecoration: \'none\',\n      color: \'inherit\'\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: sectionStyle\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: imageBoxStyle\n  }, /*#__PURE__*/react_default().createElement("img", {\n    src: "/lab.png",\n    alt: "\\uC5F0\\uAD6C\\uC2E4 \\uBAA9\\uB85D"\n  })), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: contentBoxStyle\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h5",\n    sx: Home_objectSpread(Home_objectSpread({\n      fontWeight: 600,\n      mb: 1\n    }, fontStyle), {}, {\n      fontSize: {\n        xs: \'1.25rem\',\n        sm: \'1.5rem\',\n        md: \'1.5rem\'\n      }\n    })\n  }, "\\uC5F0\\uAD6C\\uC2E4 \\uBAA9\\uB85D \\uBCF4\\uAE30"), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "body2",\n    sx: fontStyle\n  }, /*#__PURE__*/react_default().createElement("br", null), "\\uC544\\uC8FC\\uB300\\uD559\\uAD50\\uC758 \\uB2E4\\uC591\\uD55C \\uC5F0\\uAD6C\\uC2E4 \\uC815\\uBCF4\\uC640 \\uC9C4\\uD589 \\uC911\\uC778 \\uC5F0\\uAD6C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAC01 \\uC5F0\\uAD6C\\uC2E4\\uC758 \\uC8FC\\uC694 \\uC5F0\\uAD6C \\uBD84\\uC57C, \\uC2E4\\uC801, \\uCC38\\uC5EC \\uAC00\\uB2A5\\uD55C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC0B4\\uD3B4\\uBCF4\\uACE0 \\uAD00\\uC2EC \\uC788\\uB294 \\uBD84\\uC57C\\uC5D0 \\uC9C1\\uC811 \\uBB38\\uC758\\uD574\\uBCF4\\uC138\\uC694.")))), /*#__PURE__*/react_default().createElement(chunk_SYFQ2XB5/* Link */.N_, {\n    to: "/companies",\n    style: {\n      textDecoration: \'none\',\n      color: \'inherit\'\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: sectionStyle\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: imageBoxStyle\n  }, /*#__PURE__*/react_default().createElement("img", {\n    src: "/company.png",\n    alt: "\\uAE30\\uC5C5 \\uB274\\uC2A4"\n  })), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: contentBoxStyle\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h5",\n    sx: Home_objectSpread(Home_objectSpread({\n      fontWeight: 600,\n      mb: 1\n    }, fontStyle), {}, {\n      fontSize: {\n        xs: \'1.25rem\',\n        sm: \'1.5rem\',\n        md: \'1.5rem\'\n      }\n    })\n  }, "\\uAE30\\uC5C5 \\uB274\\uC2A4 \\uBCF4\\uAE30"), /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "body2",\n    sx: fontStyle\n  }, /*#__PURE__*/react_default().createElement("br", null), "\\uC0B0\\uD559\\uD611\\uB825\\uC5D0 \\uCC38\\uC5EC\\uD558\\uB294 \\uB2E4\\uC591\\uD55C \\uAE30\\uC5C5\\uB4E4\\uC758 \\uC815\\uBCF4\\uC640 \\uC9C4\\uD589 \\uC911\\uC778 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAE30\\uC5C5\\uBCC4 \\uC9C4\\uD589 \\uD504\\uB85C\\uC81D\\uD2B8, \\uAE30\\uC220 \\uD611\\uB825 \\uC694\\uCCAD, \\uCC44\\uC6A9 \\uC815\\uBCF4\\uB97C \\uC0B4\\uD3B4\\uBCF4\\uACE0 \\uAD00\\uC2EC \\uC788\\uB294 \\uAE30\\uC5C5\\uC5D0 \\uC9C1\\uC811 \\uC9C0\\uC6D0\\uD574\\uBCF4\\uC138\\uC694.")))), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      my: {\n        xs: 4,\n        sm: 5,\n        md: 6\n      },\n      borderBottom: \'1px solid #e0e0e0\'\n    }\n  }), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      mb: {\n        xs: 3,\n        sm: 4,\n        md: 5\n      }\n    }\n  }, /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: {\n      display: \'flex\',\n      alignItems: \'center\',\n      mb: 3,\n      gap: 2\n    }\n  }, /*#__PURE__*/react_default().createElement(Typography/* default */.A, {\n    variant: "h4",\n    sx: Home_objectSpread(Home_objectSpread({\n      fontWeight: 600\n    }, fontStyle), {}, {\n      fontSize: {\n        xs: \'1.5rem\',\n        sm: \'2rem\',\n        md: \'2.25rem\'\n      }\n    })\n  }, "\\uACF5\\uC9C0\\uC0AC\\uD56D"), /*#__PURE__*/react_default().createElement(Box/* default */.A, {\n    sx: Home_objectSpread({\n      display: \'flex\',\n      alignItems: \'center\',\n      bgcolor: \'rgba(33, 150, 243, 0.1)\',\n      color: \'#2196f3\',\n      px: 1.5,\n      py: 0.5,\n      borderRadius: 1,\n      fontSize: \'0.75rem\',\n      fontWeight: 600,\n      cursor: \'pointer\',\n      \'&:hover\': {\n        bgcolor: \'rgba(33, 150, 243, 0.2)\'\n      }\n    }, fontStyle),\n    onClick: function onClick() {\n      return navigate(\'/notices\');\n    }\n  }, "\\uBAA8\\uB4E0 \\uACF5\\uC9C0 \\uBCF4\\uAE30")), /*#__PURE__*/react_default().createElement(home_NoticeSection, null)))))));\n}\n/* harmony default export */ const pages_Home = (Home);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9744\n')}}]);