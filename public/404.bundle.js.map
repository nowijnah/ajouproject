{"version":3,"file":"404.bundle.js","mappings":";mqDACA,IAAAA,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAK,EAAAD,EAAA,MAAAI,EAAAJ,EAAA,KAAAR,EAAAQ,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAA4B,MAAApB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAA,SAAAP,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAa,MAAA5B,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,GAAA,0BAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,GAAA,0BAAAW,EAAAH,EAAA,sDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAA,cAAAvB,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,GAAAC,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAA2B,MAAAzB,EAAAoC,YAAAvC,EAAAwC,cAAAxC,EAAAyC,UAAAzC,IAAAD,EAAAE,GAAAE,MAAA,KAAAE,EAAA,SAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,GAAA,SAAAF,GAAA,YAAA2C,QAAAzC,EAAAE,EAAAJ,EAAA,KAAAM,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA2C,EAAA5C,EAAAE,GAAA,IAAAD,EAAAY,OAAAgC,KAAA7C,GAAA,GAAAa,OAAAiC,sBAAA,KAAAxC,EAAAO,OAAAiC,sBAAA9C,GAAAE,IAAAI,EAAAA,EAAAyC,QAAA,SAAA7C,GAAA,OAAAW,OAAAmC,yBAAAhD,EAAAE,GAAAsC,UAAA,KAAAvC,EAAAgD,KAAAC,MAAAjD,EAAAK,EAAA,QAAAL,CAAA,UAAAkD,EAAAnD,GAAA,QAAAE,EAAA,EAAAA,EAAAkD,UAAA5B,OAAAtB,IAAA,KAAAD,EAAA,MAAAmD,UAAAlD,GAAAkD,UAAAlD,GAAA,GAAAA,EAAA,EAAA0C,EAAA/B,OAAAZ,IAAA,GAAAoD,SAAA,SAAAnD,GAAAoD,EAAAtD,EAAAE,EAAAD,EAAAC,GAAA,IAAAW,OAAA0C,0BAAA1C,OAAA2C,iBAAAxD,EAAAa,OAAA0C,0BAAAtD,IAAA2C,EAAA/B,OAAAZ,IAAAoD,SAAA,SAAAnD,GAAAW,OAAA0B,eAAAvC,EAAAE,EAAAW,OAAAmC,yBAAA/C,EAAAC,GAAA,WAAAF,CAAA,UAAAsD,EAAAtD,EAAAE,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAAwD,EAAAxD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAE,OAAAuD,aAAA,YAAA1D,EAAA,KAAAQ,EAAAR,EAAA2B,KAAA1B,EAAAC,UAAA,aAAAuD,EAAAjD,GAAA,OAAAA,EAAA,UAAAkB,UAAA,uDAAAiC,OAAA1D,EAAA,CAAA2D,CAAA3D,GAAA,gBAAAwD,EAAAjD,GAAAA,EAAAA,EAAA,GAAAqD,CAAA3D,MAAAF,EAAAa,OAAA0B,eAAAvC,EAAAE,EAAA,CAAA2B,MAAA5B,EAAAuC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA1C,EAAAE,GAAAD,EAAAD,CAAA,UAAA8D,EAAA1D,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAqB,KAAA,OAAAzB,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAmD,QAAAC,QAAApD,GAAAqD,KAAA/D,EAAAI,EAAA,UAAA4D,EAAA9D,GAAA,sBAAAH,EAAA,KAAAD,EAAAoD,UAAA,WAAAW,SAAA,SAAA7D,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmE,EAAA/D,GAAA0D,EAAAzC,EAAAnB,EAAAI,EAAA6D,EAAAC,EAAA,OAAAhE,EAAA,UAAAgE,EAAAhE,GAAA0D,EAAAzC,EAAAnB,EAAAI,EAAA6D,EAAAC,EAAA,QAAAhE,EAAA,CAAA+D,OAAA,gBAAAE,EAAAnE,EAAAF,GAAA,gBAAAE,GAAA,GAAAoE,MAAAC,QAAArE,GAAA,OAAAA,CAAA,CAAAsE,CAAAtE,IAAA,SAAAA,EAAAuB,GAAA,IAAAxB,EAAA,MAAAC,EAAA,yBAAAC,QAAAD,EAAAC,OAAAE,WAAAH,EAAA,uBAAAD,EAAA,KAAAD,EAAAI,EAAAI,EAAAI,EAAAS,EAAA,GAAAL,GAAA,EAAAV,GAAA,SAAAE,GAAAP,EAAAA,EAAA0B,KAAAzB,IAAAuE,KAAA,IAAAhD,EAAA,IAAAZ,OAAAZ,KAAAA,EAAA,OAAAe,GAAA,cAAAA,GAAAhB,EAAAQ,EAAAmB,KAAA1B,IAAA2B,QAAAP,EAAA4B,KAAAjD,EAAA6B,OAAAR,EAAAG,SAAAC,GAAAT,GAAA,UAAAd,GAAAI,GAAA,EAAAF,EAAAF,CAAA,iBAAAc,GAAA,MAAAf,EAAA,SAAAW,EAAAX,EAAA,SAAAY,OAAAD,KAAAA,GAAA,kBAAAN,EAAA,MAAAF,CAAA,SAAAiB,CAAA,EAAAqD,CAAAxE,EAAAF,IAAA2E,EAAAzE,EAAAF,IAAA,qBAAA0B,UAAA,6IAAAkD,EAAA,UAAAD,EAAAzE,EAAAmB,GAAA,GAAAnB,EAAA,qBAAAA,EAAA,OAAA2E,EAAA3E,EAAAmB,GAAA,IAAApB,EAAA,GAAA6E,SAAAnD,KAAAzB,GAAA6E,MAAA,uBAAA9E,GAAAC,EAAA8E,cAAA/E,EAAAC,EAAA8E,YAAAC,MAAA,QAAAhF,GAAA,QAAAA,EAAAqE,MAAAY,KAAAhF,GAAA,cAAAD,GAAA,2CAAAkF,KAAAlF,GAAA4E,EAAA3E,EAAAmB,QAAA,YAAAwD,EAAA3E,EAAAmB,IAAA,MAAAA,GAAAA,EAAAnB,EAAAsB,UAAAH,EAAAnB,EAAAsB,QAAA,QAAAxB,EAAA,EAAAI,EAAAkE,MAAAjD,GAAArB,EAAAqB,EAAArB,IAAAI,EAAAJ,GAAAE,EAAAF,GAAA,OAAAI,CAAA,CAqCA,IAAMgF,EAAQ,CACZ,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,UAGNC,EAAmB,CACvB,IAAO,KACP,EAAK,QACL,EAAK,QACL,EAAK,OACL,EAAK,MACL,EAAK,SACL,EAAK,aAGDC,EAAa,CACjB,EAAK,QACL,EAAK,QACL,EAAK,OACL,EAAK,MACL,EAAK,SACL,EAAK,aAieP,QA9dqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAgBC,EAAAA,EAAAA,MAAhBD,YACFE,GAAYC,EAAAA,EAAAA,MAE0CC,EAAAxB,GAAZyB,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAArDC,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GACAI,EAAA5B,GAAdyB,EAAAA,EAAAA,WAAS,GAAK,GAArCI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACqCG,EAAA/B,GAAfyB,EAAAA,EAAAA,WAAS,GAAM,GAAxDO,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACgBG,EAAAlC,GAAdyB,EAAAA,EAAAA,UAAS,MAAK,GAArDU,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GACmBG,GAAArC,GAAfyB,EAAAA,EAAAA,WAAS,GAAM,GAAtDa,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GACaG,GAAAxC,GAAfyB,EAAAA,EAAAA,WAAS,GAAM,GAAhDgB,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACqCG,GAAA3C,GAAjCyB,EAAAA,EAAAA,UAASV,EAAMA,EAAM5D,OAAS,IAAG,GAAlEyF,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAC2BG,GAAA9C,GAAfyB,EAAAA,EAAAA,UAAS,OAAM,GAAxDsB,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GACEG,GAAAjD,GAAZyB,EAAAA,EAAAA,UAAS,IAAG,GAAvCyB,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC6BG,GAAApD,GAAXyB,EAAAA,EAAAA,UAAS,GAAE,GAApD4B,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,IAG5CG,EAAAA,EAAAA,YAAU,WACJnC,GAAoC,UAArBA,EAAYoC,OAC7BC,MAAM,kBACNvC,EAAS,KAEb,GAAG,CAACE,EAAaF,KAGjBqC,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAqB,eAAAC,EAAA9D,EAAA9B,IAAAE,GAAG,SAAA2F,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjG,IAAAC,GAAA,SAAAiG,GAAA,cAAAA,EAAAlI,GAAA,UACvBqF,GAAoC,UAArBA,EAAYoC,KAAgB,CAAAS,EAAAlI,EAAA,eAAAkI,EAAAjH,EAAA,UAIQ,OAJRiH,EAAArH,EAAA,EAG9CkF,GAAW,GACL+B,GAAcK,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,oBAAmBF,EAAAlI,EAAA,GAC1BqI,EAAAA,EAAAA,IAAQP,GAAY,OAA1CC,EAAaG,EAAAlH,EAEbgH,EAAkB,CAAC,EACzBD,EAAcO,KAAKrF,SAAQ,SAAAsF,GAAO,IAAAC,EAAAC,EAC1BC,EAAOH,EAAIG,OACXC,EAAOD,EAAKC,MAAQ,KACpBC,EAAWF,EAAKE,UAAY,MAE7BZ,EAAgBW,KACnBX,EAAgBW,GAAQ,CAAC,GAGtBX,EAAgBW,GAAMC,KACzBZ,EAAgBW,GAAMC,GAAY,IAGpCZ,EAAgBW,GAAMC,GAAU/F,KAAIE,EAAAA,EAAC,CACnC8F,GAAIN,EAAIM,IACLH,GAAI,IACPI,WAAyB,QAAdN,EAAAE,EAAKI,iBAAS,IAAAN,GAAQ,QAARC,EAAdD,EAAgBO,cAAM,IAAAN,OAAA,EAAtBA,EAAAlH,KAAAiH,KAA8B,IAAIQ,OAEjD,IAEApD,EAAoBoC,GAAiBE,EAAAlI,EAAA,eAAAkI,EAAArH,EAAA,EAAAoH,EAAAC,EAAAlH,EAErCiI,QAAQC,MAAM,gBAAejB,GAAS,OAEpB,OAFoBC,EAAArH,EAAA,EAEtCkF,GAAW,GAAOmC,EAAAtH,EAAA,iBAAAsH,EAAAjH,EAAA,MAAA4G,EAAA,sBAErB,kBAnC0B,OAAAD,EAAA9E,MAAA,KAAAE,UAAA,KAqC3B2E,GACF,GAAG,CAACtC,IAGJ,IAKM8D,GAAmB,eAAAC,EAAAtF,EAAA9B,IAAAE,GAAG,SAAAmH,IAAA,IAAAC,EAAAC,EAAA,OAAAvH,IAAAC,GAAA,SAAAuH,GAAA,cAAAA,EAAAxJ,GAAA,UACrBoG,EAAiB,CAAFoD,EAAAxJ,EAAA,eAAAwJ,EAAAvI,EAAA,iBAAAuI,EAAA3I,EAAA,EAAA2I,EAAAxJ,EAAA,GAGZyJ,EAAAA,EAAAA,KAAUlB,EAAAA,EAAAA,IAAIH,EAAAA,GAAI,mBAAoBhC,EAAgByC,KAAI,OAG1DS,EAAevG,EAAA,GAAO4C,GAC5BlF,OAAOgC,KAAK6G,GAAiBrG,SAAQ,SAAA0F,GACnClI,OAAOgC,KAAK6G,EAAgBX,IAAO1F,SAAQ,SAAA2F,GACzCU,EAAgBX,GAAMC,GAAYU,EAAgBX,GAAMC,GAAUjG,QAChE,SAAA+G,GAAO,OAAIA,EAAQb,KAAOzC,EAAgByC,EAAE,GAEhD,GACF,IAEAjD,EAAoB0D,GAEpBpD,GAAoB,GACpBG,EAAmB,MAAMmD,EAAAxJ,EAAA,eAAAwJ,EAAA3I,EAAA,EAAA0I,EAAAC,EAAAxI,EAEzBiI,QAAQC,MAAM,gBAAeK,GAC7B7B,MAAM,yBAAyB,cAAA8B,EAAAvI,EAAA,MAAAoI,EAAA,kBAElC,kBAxBwB,OAAAD,EAAAtG,MAAA,KAAAE,UAAA,KA+BnB2G,GAAW,eAAAC,EAAA9F,EAAA9B,IAAAE,GAAG,SAAA2H,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtB,EAAAuB,EAAAC,EAAAC,EAAAvC,EAAAC,EAAAC,EAAAsC,EAAAC,EAAAC,EAAA,OAAAxI,IAAAC,GAAA,SAAAwI,GAAA,cAAAA,EAAAzK,GAAA,UACb6G,GAAc,CAAF4D,EAAAzK,EAAA,QACM,OAArB0H,MAAM,eAAe+C,EAAAxJ,EAAA,UAMjB6I,EAFuC,QAArB9C,GAGpBvG,OAAOgC,KAAKwC,GAAkBtC,QAAO,SAAA+H,GAAG,MAAY,QAARA,CAAa,IACzD,CAAC1D,IAELL,IAAgB,GAChBS,GAAa,CAAC,WAADuD,OAAY9D,GAAY,OAAA8D,OAAM1F,EAAiB+B,OAAsByD,EAAA5J,EAAA,EAM5EkJ,EAAU,GAERC,GAAmBY,EAAAA,EAAAA,IAAcrF,EAAW,oBAAmB0E,EAAAY,EAE9Cf,GAAiBW,EAAA5J,EAAA,EAAAoJ,EAAAa,IAAA,WAAAZ,EAAAD,EAAAjK,KAAAwB,KAAE,CAAFiJ,EAAAzK,EAAA,QAIrC,OAJQ4I,EAAQsB,EAAAzI,MACX0I,EAAc,CAClBxB,KAAMpF,OAAOsD,IACb+B,SAAUrF,OAAOqF,IAClB6B,EAAAzK,EAAA,EAEoBgK,EAAiBG,GAAY,QAA5CC,EAAMK,EAAAzJ,GAED0H,MAAQ0B,EAAO1B,KAAKqC,MAAQ7G,MAAMC,QAAQiG,EAAO1B,KAAKqC,QAEzDV,EAAeD,EAAO1B,KAAKqC,KAC9BpI,QAAO,SAAAqI,GAAG,OACTA,EAAIC,SAAS,gBACbD,EAAIC,SAAS,UAAU,IAG3BlB,EAAU,GAAHY,OAAAO,EAAOnB,GAAOmB,EAAKb,KAGxBD,EAAO1B,MAAQ0B,EAAO1B,KAAKyC,UACXf,EAAO1B,KAAK0C,MACdhB,EAAO1B,KAAK2C,QACbjB,EAAO1B,KAAK4C,QAC5B,OAAAb,EAAAzK,EAAA,eAAAyK,EAAAzK,EAAA,eAAAyK,EAAA5J,EAAA,EAAA0J,EAAAE,EAAAzJ,EAAAiJ,EAAArK,EAAA2K,GAAA,cAAAE,EAAA5J,EAAA,EAAAoJ,EAAArJ,IAAA6J,EAAA7J,EAAA,WAOmD,OAHtDwG,GAAa2C,GAGPjC,GAAcK,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,oBAAmBqC,EAAAzK,EAAA,IAC1BqI,EAAAA,EAAAA,IAAQP,GAAY,QAA1CC,EAAa0C,EAAAzJ,EAEbgH,EAAkB,CAAC,EACzBD,EAAcO,KAAKrF,SAAQ,SAAAsF,GAAO,IAAAgD,EAAAC,EAC1B9C,EAAOH,EAAIG,OACXC,EAAOD,EAAKC,MAAQ,KACpBC,EAAWF,EAAKE,UAAY,MAE7BZ,EAAgBW,KACnBX,EAAgBW,GAAQ,CAAC,GAGtBX,EAAgBW,GAAMC,KACzBZ,EAAgBW,GAAMC,GAAY,IAGpCZ,EAAgBW,GAAMC,GAAU/F,KAAIE,EAAAA,EAAC,CACnC8F,GAAIN,EAAIM,IACLH,GAAI,IACPI,WAAyB,QAAdyC,EAAA7C,EAAKI,iBAAS,IAAAyC,GAAQ,QAARC,EAAdD,EAAgBxC,cAAM,IAAAyC,OAAA,EAAtBA,EAAAjK,KAAAgK,KAA8B,IAAIvC,OAEjD,IAEApD,EAAoBoC,GAAiByC,EAAAzK,EAAA,iBAAAyK,EAAA5J,EAAA,GAAA2J,EAAAC,EAAAzJ,EAErCiI,QAAQC,MAAM,YAAWsB,GAEnBF,EAAeE,EAAMiB,SAAW,YACtCrE,IAAa,SAAAsE,GAAI,SAAAf,OAAAO,EACZQ,GAAI,WAAAf,OACGL,IAAY,IACrB,QAEoB,OAFpBG,EAAA5J,EAAA,GAEH8F,IAAgB,GAAO8D,EAAA7J,EAAA,mBAAA6J,EAAAxJ,EAAA,MAAA4I,EAAA,oCAE1B,kBAzFgB,OAAAD,EAAA9G,MAAA,KAAAE,UAAA,KAuGjB,IAAKqC,GAAoC,UAArBA,EAAYoC,KAC9B,OAAO,KAIT,IAAMkE,GAAsBhG,EAAiBkB,KAAiB,CAAC,EAE/D,OACE+E,EAAAA,cAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,GAAI,IACjCJ,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEG,GAAI,EAAGC,QAAS,OAAQC,WAAY,WAC7CR,EAAAA,cAACS,EAAAA,EAAU,CACTC,QAAS,WAAF,OAAQnH,EAAS,SAAS,EACjC4G,GAAI,CAAEQ,GAAI,IAEVX,EAAAA,cAACY,EAAAA,EAAa,OAEhBZ,EAAAA,cAACa,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKZ,GAAI,CAAEa,SAAU,IAAK,gBAG7DhB,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEI,QAAS,OAAQU,IAAK,IAC/BjB,EAAAA,cAACkB,EAAAA,EAAM,CACLJ,QAAQ,YACRK,UAAWnB,EAAAA,cAACoB,EAAAA,EAAiB,MAC7BV,QAlIoB,WAC5B9F,IAAmB,EACrB,EAiIUuF,GAAI,CACFkB,QAAS,UACT,UAAW,CACTA,QAAS,aAGd,SAMJnH,EACC8F,EAAAA,cAACsB,EAAAA,EAAc,CAACzB,QAAQ,oBAExBG,EAAAA,cAACK,EAAAA,EAAG,KAEFL,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEG,GAAI,EAAGC,QAAS,OAAQgB,eAAgB,WACjDvB,EAAAA,cAACwB,EAAAA,EAAW,CAACrB,GAAI,CAAEsB,SAAU,MAC3BzB,EAAAA,cAAC0B,EAAAA,EAAU,CAACzE,GAAG,qBAAoB,SACnC+C,EAAAA,cAAC2B,EAAAA,EAAM,CACLC,QAAQ,oBACR/L,MAAOoF,GACP4G,MAAM,QACNC,SAAU,SAAC9N,GAAC,OAAKkH,GAAgBlH,EAAE+N,OAAOlM,MAAM,GAE/CuD,EAAM4I,KAAI,SAACjF,GAAI,OACdiD,EAAAA,cAACiC,EAAAA,EAAQ,CAACC,IAAKnF,EAAMlH,MAAOkH,GAAOA,EAAgB,OAO3DiD,EAAAA,cAACmC,EAAAA,EAAI,CACHtM,MAAO6F,GACPoG,SAvEsB,SAACM,EAAOC,GACtC1G,GAAoB0G,GACpBhH,GAAoBxG,OAAOgC,KAAKyC,GAAY+I,GAC9C,EAqEUvB,QAAQ,aACRwB,cAAc,OACd,aAAW,SACXnC,GAAI,CACFoC,aAAc,EACdC,YAAa,UACblC,GAAI,IAGLzL,OAAO4N,QAAQnJ,GAAY0I,KAAI,SAAAU,GAAA,IAAAC,EAAAtK,EAAAqK,EAAA,GAAER,EAAGS,EAAA,GAAEd,EAAKc,EAAA,UAC1C3C,EAAAA,cAAC4C,EAAAA,EAAG,CAACV,IAAKA,EAAKL,MAAOA,GAAS,KAKnC7B,EAAAA,cAAC6C,EAAAA,GAAc,CACbC,MAAOpH,GACPqH,cAnFgB,SAACD,GACzBnH,GAAoBmH,GACpBzH,GAAoBxG,OAAOgC,KAAKyC,GAAYwJ,GAC9C,GAkFWjO,OAAOgC,KAAKyC,GAAY0I,KAAI,SAAChF,EAAU8F,GAAK,IAAAE,EAAA,OAC3ChD,EAAAA,cAACK,EAAAA,EAAG,CAAC6B,IAAKlF,EAAUnB,KAAK,WAAWoH,OAAQvH,KAAqBoH,IACjC,QAA7BE,EAAAjD,GAAoB/C,UAAS,IAAAgG,OAAA,EAA7BA,EAA+BxN,QAAS,EACzCwK,EAAAA,cAACkD,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACtBrD,GAAoB/C,GAAUgF,KAAI,SAAAlE,GAAO,OACxCkC,EAAAA,cAACkD,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGtB,IAAKpE,EAAQb,IAC5C+C,EAAAA,cAACyD,EAAAA,EAAK,CACJtD,GAAI,CACFlL,EAAG,EACHsL,QAAS,OACTmD,cAAe,SACfC,OAAQ,OACRC,OAAQ9F,EAAQ+F,UAAY,UAAY,WAE1CnD,QAAS,WAAF,OAAQ5C,EAAQ+F,WAAaC,OAAOC,KAAKjG,EAAQ+F,UAAW,SAAS,GAE5E7D,EAAAA,cAACa,EAAAA,EAAU,CAACC,QAAQ,KAAKkD,QAAM,GAC5BlG,EAAQmG,OAEXjE,EAAAA,cAACa,EAAAA,EAAU,CAACC,QAAQ,QAAQoD,MAAM,iBAAiB/D,GAAI,CAAEG,GAAI,IAC1DxC,EAAQqG,UAEXnE,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEa,SAAU,KACrBhB,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CACPI,QAAS,OACTgB,eAAgB,gBAChBf,WAAY,SACZ4D,GAAI,IAEHtG,EAAQ+F,WACP7D,EAAAA,cAACS,EAAAA,EAAU,CACT4D,KAAK,QACLH,MAAM,UACNxD,QAAS,SAAC1M,GACRA,EAAEsQ,kBACFR,OAAOC,KAAKjG,EAAQ+F,UAAW,SACjC,GAEA7D,EAAAA,cAACuE,EAAAA,EAAQ,CAACC,SAAS,WAGvBxE,EAAAA,cAACkB,EAAAA,EAAM,CACLmD,KAAK,QACLH,MAAM,QACNxD,QAAS,SAAC1M,GACRA,EAAEsQ,kBAxQC,SAACxG,GAC9BrD,EAAmBqD,GACnBxD,GAAoB,EACtB,CAsQ4BmK,CAAuB3G,EACzB,GACD,QAKA,KAIXkC,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEuE,UAAW,SAAUtE,GAAI,IAClCJ,EAAAA,cAACa,EAAAA,EAAU,CAACqD,MAAM,kBAAiB,yBAKjC,MAOdlE,EAAAA,cAAC2E,EAAAA,EAAM,CACLZ,KAAM1J,EACNuK,QAAS,WAAF,OAAQtK,GAAoB,EAAM,GAEzC0F,EAAAA,cAAC6E,EAAAA,EAAW,KAAC,WACb7E,EAAAA,cAAC8E,EAAAA,EAAa,KACZ9E,EAAAA,cAAC+E,EAAAA,EAAiB,KAAC,IACfvK,aAAe,EAAfA,EAAiByJ,MAAM,2CAI7BjE,EAAAA,cAACgF,EAAAA,EAAa,KACZhF,EAAAA,cAACkB,EAAAA,EAAM,CAACR,QAAS,WAAF,OAAQpG,GAAoB,EAAM,GAAE,MAGnD0F,EAAAA,cAACkB,EAAAA,EAAM,CACLR,QAASnD,GACT2G,MAAM,QACNe,WAAS,GACV,QAOLjF,EAAAA,cAAC2E,EAAAA,EAAM,CACLZ,KAAMpJ,GACNiK,QAAS,WAAF,OAAS9J,IAAgBF,IAAmB,EAAM,EACzDsF,SAAS,KACTgF,WAAS,GAETlF,EAAAA,cAAC6E,EAAAA,EAAW,KAAC,iBACb7E,EAAAA,cAAC8E,EAAAA,EAAa,KACZ9E,EAAAA,cAACkD,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGjD,GAAI,CAAEG,GAAI,IACpCN,EAAAA,cAACkD,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBvD,EAAAA,cAACwB,EAAAA,EAAW,CAAC0D,WAAS,EAACb,KAAK,SAC1BrE,EAAAA,cAAC0B,EAAAA,EAAU,CAACzE,GAAG,qBAAoB,MACnC+C,EAAAA,cAAC2B,EAAAA,EAAM,CACLC,QAAQ,oBACR/L,MAAOoF,GACP6G,SAAU,SAAC9N,GAAC,OAAKkH,GAAgBlH,EAAE+N,OAAOlM,MAAM,EAChDgM,MAAM,MAELzI,EAAM4I,KAAI,SAACjF,GAAI,OACdiD,EAAAA,cAACiC,EAAAA,EAAQ,CAACC,IAAKnF,EAAMlH,MAAOkH,GAAOA,EAAgB,OAK3DiD,EAAAA,cAACkD,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBvD,EAAAA,cAACwB,EAAAA,EAAW,CAAC0D,WAAS,EAACb,KAAK,SAC1BrE,EAAAA,cAAC0B,EAAAA,EAAU,CAACzE,GAAG,yBAAwB,QACvC+C,EAAAA,cAAC2B,EAAAA,EAAM,CACLC,QAAQ,wBACR/L,MAAOuF,GACP0G,SAAU,SAAC9N,GAAC,OAAKqH,GAAoBrH,EAAE+N,OAAOlM,MAAM,EACpDgM,MAAM,QAELhN,OAAO4N,QAAQpJ,GAAkB2I,KAAI,SAAAmD,GAAA,IAAAC,EAAA/M,EAAA8M,EAAA,GAAEjD,EAAGkD,EAAA,GAAEvP,EAAKuP,EAAA,UAChDpF,EAAAA,cAACiC,EAAAA,EAAQ,CAACC,IAAKA,EAAKrM,MAAOqM,GACxBrM,EACQ,QAOpBiF,GACCkF,EAAAA,cAACK,EAAAA,EAAG,CAACF,GAAI,CAAEuE,UAAW,SAAUtE,GAAI,IAClCJ,EAAAA,cAACqF,EAAAA,EAAgB,CAAClF,GAAI,CAAEG,GAAI,KAC5BN,EAAAA,cAACa,EAAAA,EAAU,KAAC,gBAGdb,EAAAA,cAACyD,EAAAA,EAAK,CACJ3C,QAAQ,WACRX,GAAI,CACFmF,UAAW,QACXC,UAAW,OACXtQ,EAAG,EACHoM,QAAS,aAGV9F,GAAUyG,KAAI,SAAC5C,EAAK0D,GAAK,OACxB9C,EAAAA,cAACa,EAAAA,EAAU,CACTqB,IAAKY,EACLhC,QAAQ,QACRX,GAAI,CACFqF,WAAY,YACZC,WAAY,WACZC,UAAW,eAGZtG,EACU,MAKrBY,EAAAA,cAACgF,EAAAA,EAAa,KACZhF,EAAAA,cAACkB,EAAAA,EAAM,CACLR,QAAS,WAAF,OAAQ9F,IAAmB,EAAM,EACxC+K,SAAU7K,IACX,MAGDkF,EAAAA,cAACkB,EAAAA,EAAM,CACLR,QAAS3C,GACT+C,QAAQ,YACRoD,MAAM,UACNyB,SAAU7K,GACVqG,UAAWrG,GAAekF,EAAAA,cAACqF,EAAAA,EAAgB,CAAChB,KAAM,GAAIH,MAAM,YAAe,MAE1EpJ,GAAe,WAAa,YAMzC","sources":["webpack://muibasic_starterkit/./src/pages/admin/AdminSoftcon.js"],"sourcesContent":["// src/pages/admin/AdminSoftcon.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getFunctions, httpsCallable } from 'firebase/functions';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport SwipeableViews from 'react-swipeable-views-react-18-fix';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport LinkIcon from '@mui/icons-material/Link';\nimport { useAuth } from '../../components/auth/AuthContext';\nimport { \n  collection, \n  getDocs,\n  doc, \n  deleteDoc,\n  query\n} from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\n\nconst TERMS = [\n  \"2020-1\", \"2020-2\",\n  \"2021-1\", \"2021-2\",\n  \"2022-1\", \"2022-2\",\n  \"2023-1\", \"2023-2\",\n  \"2024-1\", \"2024-2\"\n];\n\nconst CRAWL_CATEGORIES = {\n  'ALL': '전체',\n  'S': '소프트웨어',\n  'D': '사이버보안',\n  'I': 'AI융합',\n  'R': '미디어',\n  'M': '자기주도연구',\n  'P': '자기주도 프로젝트'\n};\n\nconst CATEGORIES = {\n  'S': '소프트웨어',\n  'D': '사이버보안',\n  'I': 'AI융합',\n  'R': '미디어',\n  'M': '자기주도연구',\n  'P': '자기주도 프로젝트'\n};\n\nconst AdminSoftcon = () => {\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const functions = getFunctions();\n  \n  const [uploadedProjects, setUploadedProjects] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState(null);\n  const [crawlDialogOpen, setCrawlDialogOpen] = useState(false);\n  const [crawlLoading, setCrawlLoading] = useState(false);\n  const [selectedTerm, setSelectedTerm] = useState(TERMS[TERMS.length - 1]);\n  const [selectedCategory, setSelectedCategory] = useState('ALL');\n  const [crawlLogs, setCrawlLogs] = useState([]);\n  const [categoryTabIndex, setCategoryTabIndex] = useState(0);\n\n  // 관리자 권한 확인\n  useEffect(() => {\n    if (currentUser && currentUser.role !== 'ADMIN') {\n      alert('관리자 권한이 필요합니다.');\n      navigate('/');\n    }\n  }, [currentUser, navigate]);\n\n  // 업로드된 프로젝트 로드\n  useEffect(() => {\n    const fetchUploadedProjects = async () => {\n      if (!currentUser || currentUser.role !== 'ADMIN') return;\n      \n      try {\n        setLoading(true);\n        const projectsRef = collection(db, 'softcon_projects');\n        const querySnapshot = await getDocs(projectsRef);\n        \n        const groupedProjects = {};\n        querySnapshot.docs.forEach(doc => {\n          const data = doc.data();\n          const term = data.term || '기타';\n          const category = data.category || 'ALL';\n          \n          if (!groupedProjects[term]) {\n            groupedProjects[term] = {};\n          }\n          \n          if (!groupedProjects[term][category]) {\n            groupedProjects[term][category] = [];\n          }\n          \n          groupedProjects[term][category].push({\n            id: doc.id,\n            ...data,\n            createdAt: data.createdAt?.toDate?.() || new Date()\n          });\n        });\n        \n        setUploadedProjects(groupedProjects);\n      } catch (error) {\n        console.error('프로젝트 로드 중 오류:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchUploadedProjects();\n  }, [currentUser]);\n\n  // 프로젝트 삭제 핸들러\n  const handleOpenDeleteDialog = (project) => {\n    setProjectToDelete(project);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteProject = async () => {\n    if (!projectToDelete) return;\n    \n    try {\n      await deleteDoc(doc(db, 'softcon_projects', projectToDelete.id));\n      \n      // 상태 업데이트\n      const updatedProjects = {...uploadedProjects};\n      Object.keys(updatedProjects).forEach(term => {\n        Object.keys(updatedProjects[term]).forEach(category => {\n          updatedProjects[term][category] = updatedProjects[term][category].filter(\n            project => project.id !== projectToDelete.id\n          );\n        });\n      });\n      \n      setUploadedProjects(updatedProjects);\n      \n      setDeleteDialogOpen(false);\n      setProjectToDelete(null);\n    } catch (error) {\n      console.error('프로젝트 삭제 중 오류:', error);\n      alert('프로젝트 삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 크롤링 핸들러\n  const handleOpenCrawlDialog = () => {\n    setCrawlDialogOpen(true);\n  };\n\n  const handleCrawl = async () => {\n    if (!selectedTerm) {\n      alert('학기를 선택해주세요.');\n      return;\n    }\n\n    const isAllCategories = selectedCategory === \"ALL\";\n    \n    const categoriesToCrawl = isAllCategories \n      ? Object.keys(CRAWL_CATEGORIES).filter(cat => cat !== \"ALL\")\n      : [selectedCategory]; \n    \n    setCrawlLoading(true);\n    setCrawlLogs([`크롤링 시작: ${selectedTerm} / ${CRAWL_CATEGORIES[selectedCategory]}`]);\n    \n    try {\n      let totalProcessed = 0;\n      let totalSkipped = 0;\n      let totalErrors = 0;\n      let allLogs = [];\n\n      const crawlSoftconData = httpsCallable(functions, 'crawlSoftconData');\n\n      for (const category of categoriesToCrawl) {\n        const requestData = {\n          term: String(selectedTerm), \n          category: String(category)\n        };\n        \n        const result = await crawlSoftconData(requestData);\n        \n        if (result.data && result.data.logs && Array.isArray(result.data.logs)) {\n          // 마지막 두 줄의 로그만 필터링\n          const filteredLogs = result.data.logs\n            .filter(log => \n              log.includes('프로젝트 저장 완료:') || \n              log.includes('크롤링 완료:')\n            );\n          \n          allLogs = [...allLogs, ...filteredLogs];\n        }\n        \n        if (result.data && result.data.success) {\n          totalProcessed += result.data.count || 0;\n          totalSkipped += result.data.skipped || 0;\n          totalErrors += result.data.errors || 0;\n        }\n      }\n      \n      // 로그 업데이트 (최종 결과만)\n      setCrawlLogs(allLogs);\n\n      // 프로젝트 목록 새로고침\n      const projectsRef = collection(db, 'softcon_projects');\n      const querySnapshot = await getDocs(projectsRef);\n      \n      const groupedProjects = {};\n      querySnapshot.docs.forEach(doc => {\n        const data = doc.data();\n        const term = data.term || '기타';\n        const category = data.category || 'ALL';\n        \n        if (!groupedProjects[term]) {\n          groupedProjects[term] = {};\n        }\n        \n        if (!groupedProjects[term][category]) {\n          groupedProjects[term][category] = [];\n        }\n        \n        groupedProjects[term][category].push({\n          id: doc.id,\n          ...data,\n          createdAt: data.createdAt?.toDate?.() || new Date()\n        });\n      });\n      \n      setUploadedProjects(groupedProjects);\n    } catch (error) {\n      console.error('크롤링 중 오류:', error);\n      \n      const errorMessage = error.message || '알 수 없는 오류';\n      setCrawlLogs(prev => [\n        ...prev, \n        `오류 발생: ${errorMessage}`\n      ]);\n    } finally {\n      setCrawlLoading(false);\n    }\n  };\n\n  // 카테고리 탭 변경 핸들러\n  const handleCategoryTabChange = (event, newValue) => {\n    setCategoryTabIndex(newValue);\n    setSelectedCategory(Object.keys(CATEGORIES)[newValue]);\n  };\n\n  // 탭 슬라이드 변경 핸들러\n  const handleChangeIndex = (index) => {\n    setCategoryTabIndex(index);\n    setSelectedCategory(Object.keys(CATEGORIES)[index]);\n  };\n\n  if (!currentUser || currentUser.role !== 'ADMIN') {\n    return null;\n  }\n\n  // 현재 선택된 학기의 프로젝트 필터링\n  const currentTermProjects = uploadedProjects[selectedTerm] || {};\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box sx={{ mb: 4, display: 'flex', alignItems: 'center' }}>\n        <IconButton \n          onClick={() => navigate('/admin')} \n          sx={{ mr: 2 }}\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"h4\" component=\"h1\" sx={{ flexGrow: 1 }}>\n          소프트콘 프로젝트 관리\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <Button\n            variant=\"contained\"\n            startIcon={<CloudDownloadIcon />}\n            onClick={handleOpenCrawlDialog}\n            sx={{ \n              bgcolor: '#0066CC',\n              '&:hover': {\n                bgcolor: '#004C99'\n              }\n            }}\n          >\n            크롤링\n          </Button>\n        </Box>\n      </Box>\n\n      {loading ? (\n        <LoadingSpinner message=\"프로젝트를 불러오는 중...\" />\n      ) : (\n        <Box>\n          {/* 학기 선택 드롭다운 */}\n          <Box sx={{ mb: 2, display: 'flex', justifyContent: 'center' }}>\n            <FormControl sx={{ minWidth: 200 }}>\n              <InputLabel id=\"term-select-label\">학기 선택</InputLabel>\n              <Select\n                labelId=\"term-select-label\"\n                value={selectedTerm}\n                label=\"학기 선택\"\n                onChange={(e) => setSelectedTerm(e.target.value)}\n              >\n                {TERMS.map((term) => (\n                  <MenuItem key={term} value={term}>{term}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n\n          {/* 카테고리 탭 */}\n          <Tabs\n            value={categoryTabIndex}\n            onChange={handleCategoryTabChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"카테고리 탭\"\n            sx={{ \n              borderBottom: 1, \n              borderColor: 'divider',\n              mb: 2 \n            }}\n          >\n            {Object.entries(CATEGORIES).map(([key, label]) => (\n              <Tab key={key} label={label} />\n            ))}\n          </Tabs>\n\n          {/* 스와이프 가능한 뷰 */}\n          <SwipeableViews\n            index={categoryTabIndex}\n            onChangeIndex={handleChangeIndex}\n          >\n            {Object.keys(CATEGORIES).map((category, index) => (\n              <Box key={category} role=\"tabpanel\" hidden={categoryTabIndex !== index}>\n                {currentTermProjects[category]?.length > 0 ? (\n                <Grid container spacing={2}>\n                  {currentTermProjects[category].map(project => (\n                    <Grid item xs={12} sm={6} md={4} key={project.id}>\n                      <Paper \n                        sx={{ \n                          p: 2, \n                          display: 'flex', \n                          flexDirection: 'column', \n                          height: '100%',\n                          cursor: project.sourceUrl ? 'pointer' : 'default'\n                        }}\n                        onClick={() => project.sourceUrl && window.open(project.sourceUrl, '_blank')}\n                      >\n                        <Typography variant=\"h6\" noWrap>\n                          {project.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                          {project.subtitle}\n                        </Typography>\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Box sx={{ \n                          display: 'flex', \n                          justifyContent: 'space-between', \n                          alignItems: 'center', \n                          mt: 2 \n                        }}>\n                          {project.sourceUrl && (\n                            <IconButton \n                              size=\"small\" \n                              color=\"primary\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                window.open(project.sourceUrl, '_blank');\n                              }}\n                            >\n                              <LinkIcon fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                          <Button \n                            size=\"small\" \n                            color=\"error\" \n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleOpenDeleteDialog(project);\n                            }}\n                          >\n                            삭제\n                          </Button>\n                        </Box>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              ) : (\n                <Box sx={{ textAlign: 'center', py: 4 }}>\n                  <Typography color=\"text.secondary\">\n                    해당 카테고리의 프로젝트가 없습니다.\n                  </Typography>\n                </Box>\n              )}\n              </Box>\n            ))}\n          </SwipeableViews>\n        </Box>\n      )}\n\n      {/* 삭제 확인 다이얼로그 */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n      >\n        <DialogTitle>프로젝트 삭제</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            \"{projectToDelete?.title}\" 프로젝트를 정말 삭제하시겠습니까?\n            이 작업은 되돌릴 수 없습니다.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>\n            취소\n          </Button>\n          <Button \n            onClick={handleDeleteProject} \n            color=\"error\"\n            autoFocus\n          >\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* 크롤링 다이얼로그 */}\n      <Dialog\n        open={crawlDialogOpen}\n        onClose={() => !crawlLoading && setCrawlDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>소프트콘 프로젝트 크롤링</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mb: 2 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel id=\"term-select-label\">학기</InputLabel>\n                <Select\n                  labelId=\"term-select-label\"\n                  value={selectedTerm}\n                  onChange={(e) => setSelectedTerm(e.target.value)}\n                  label=\"학기\"\n                >\n                  {TERMS.map((term) => (\n                    <MenuItem key={term} value={term}>{term}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth size=\"small\">\n                <InputLabel id=\"category-select-label\">카테고리</InputLabel>\n                <Select\n                  labelId=\"category-select-label\"\n                  value={selectedCategory}\n                  onChange={(e) => setSelectedCategory(e.target.value)}\n                  label=\"카테고리\"\n                >\n                  {Object.entries(CRAWL_CATEGORIES).map(([key, value]) => (\n                    <MenuItem key={key} value={key}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          \n          {crawlLoading ? (\n            <Box sx={{ textAlign: 'center', py: 2 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography>크롤링 진행 중...</Typography>\n            </Box>\n          ) : (\n            <Paper \n              variant=\"outlined\" \n              sx={{ \n                maxHeight: '300px', \n                overflowY: 'auto', \n                p: 2, \n                bgcolor: 'grey.100' \n              }}\n            >\n              {crawlLogs.map((log, index) => (\n                <Typography \n                  key={index} \n                  variant=\"body2\" \n                  sx={{ \n                    fontFamily: 'monospace', \n                    whiteSpace: 'pre-wrap',\n                    wordBreak: 'break-word' \n                  }}\n                >\n                  {log}\n                </Typography>\n              ))}\n            </Paper>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setCrawlDialogOpen(false)} \n            disabled={crawlLoading}\n          >\n            닫기\n          </Button>\n          <Button \n            onClick={handleCrawl}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={crawlLoading}\n            startIcon={crawlLoading ? <CircularProgress size={20} color=\"inherit\" /> : null}\n          >\n            {crawlLoading ? '크롤링 중...' : '크롤링 시작'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default AdminSoftcon;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","TERMS","CRAWL_CATEGORIES","CATEGORIES","navigate","useNavigate","currentUser","useAuth","functions","getFunctions","_useState2","useState","uploadedProjects","setUploadedProjects","_useState4","loading","setLoading","_useState6","deleteDialogOpen","setDeleteDialogOpen","_useState8","projectToDelete","setProjectToDelete","_useState0","crawlDialogOpen","setCrawlDialogOpen","_useState10","crawlLoading","setCrawlLoading","_useState12","selectedTerm","setSelectedTerm","_useState14","selectedCategory","setSelectedCategory","_useState16","crawlLogs","setCrawlLogs","_useState18","categoryTabIndex","setCategoryTabIndex","useEffect","role","alert","fetchUploadedProjects","_ref","_callee","projectsRef","querySnapshot","groupedProjects","_t","_context","collection","db","getDocs","docs","doc","_data$createdAt","_data$createdAt$toDat","data","term","category","id","createdAt","toDate","Date","console","error","handleDeleteProject","_ref2","_callee2","updatedProjects","_t2","_context2","deleteDoc","project","handleCrawl","_ref3","_callee3","categoriesToCrawl","allLogs","crawlSoftconData","_iterator","_step","requestData","result","filteredLogs","errorMessage","_t3","_t4","_context3","cat","concat","httpsCallable","_createForOfIteratorHelper","s","logs","log","includes","_toConsumableArray","success","count","skipped","errors","_data$createdAt2","_data$createdAt2$toDa","message","prev","currentTermProjects","React","Container","maxWidth","sx","py","Box","mb","display","alignItems","IconButton","onClick","mr","ArrowBackIcon","Typography","variant","component","flexGrow","gap","Button","startIcon","CloudDownloadIcon","bgcolor","LoadingSpinner","justifyContent","FormControl","minWidth","InputLabel","Select","labelId","label","onChange","target","map","MenuItem","key","Tabs","event","newValue","scrollButtons","borderBottom","borderColor","entries","_ref4","_ref5","Tab","SwipeableViews","index","onChangeIndex","_currentTermProjects$","hidden","Grid","container","spacing","item","xs","sm","md","Paper","flexDirection","height","cursor","sourceUrl","window","open","noWrap","title","color","subtitle","mt","size","stopPropagation","LinkIcon","fontSize","handleOpenDeleteDialog","textAlign","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","fullWidth","_ref6","_ref7","CircularProgress","maxHeight","overflowY","fontFamily","whiteSpace","wordBreak","disabled"],"sourceRoot":""}