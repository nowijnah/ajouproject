{"version":3,"file":"785.bundle.js","mappings":"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","sources":["webpack://muibasic_starterkit/./src/pages/companies/CompanyPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { collection, query, getDocs, orderBy, doc, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport ContentList from '../../components/card/ContentList';\nimport AnimatedLoading from '../../components/common/AnimatedLoading';\n\nexport default function CompanyPage() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // 1. 게시글 데이터 가져오기\n        const postsRef = collection(db, 'companies');\n        const q = query(postsRef, orderBy('createdAt', 'desc'));\n        const querySnapshot = await getDocs(q);\n        \n        // 2. 각 게시글의 작성자 정보 가져오기\n        const postsWithAuthors = await Promise.all(\n          querySnapshot.docs.map(async (postDoc) => {\n            const postData = postDoc.data();\n            let authorName = '알 수 없음';\n            \n            // 작성자 정보 가져오기\n            if (postData.authorId) {\n              const authorDoc = await getDoc(doc(db, 'users', postData.authorId));\n              if (authorDoc.exists()) {\n                authorName = authorDoc.data().displayName || '알 수 없음';\n              }\n            }\n\n            return {\n              id: postDoc.id,\n              title: postData.title,\n              subtitle: postData.subtitle,\n              description: authorName, // 부제목 대신 작성자 이름 표시\n              image: postData.thumbnail || '',\n              content: postData.content || '',\n              authorId: postData.authorId,\n              createdAt: postData.createdAt,\n              likeCount: postData.likeCount,\n              commentCount: postData.commentCount,\n              files: postData.files || [],\n              links: postData.links || [],\n              keywords: postData.keywords || []\n            };\n          })\n        );\n\n        setPosts(postsWithAuthors);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  if (loading) {\n    return <AnimatedLoading message=\"기업 정보를 불러오는 중입니다\" />;\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <Typography color=\"error\">\n          데이터를 불러오는 중 오류가 발생했습니다.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <ContentList \n      type=\"company\"\n      data={posts}\n    />\n  );\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_arrayLikeToArray","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","CompanyPage","_useState2","useState","posts","setPosts","_useState4","loading","setLoading","_useState6","error","setError","useEffect","fetchPosts","_ref","_callee2","postsRef","q","querySnapshot","postsWithAuthors","_t","_context2","collection","db","query","orderBy","getDocs","all","docs","map","_ref2","_callee","postDoc","postData","authorName","authorDoc","_context","data","authorId","getDoc","doc","exists","id","title","subtitle","description","image","thumbnail","content","createdAt","likeCount","commentCount","files","links","keywords","_x","console","React","AnimatedLoading","message","Box","sx","textAlign","Typography","color","ContentList","type"],"sourceRoot":""}